{"parse":{"title":"setVelocityTransformation","pageid":9652,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> arma2oa </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.51</value></part><part><name>Game version</name>=<value>\n</value></part><part><name>eff</name>=<value> global</value></part><part><name>Multiplayer Effects</name>=<value>\n</value></part><part><name>arg</name>=<value> local</value></part><part><name>Multiplayer Arguments</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Object Manipulation </value></part><part><name>GROUP1</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Interpolates and applies [[PositionASL]], [[velocity]], [[vectorDir]] and [[vectorUp]] to the given object based on the interval value. &lt;br&gt;\nWhen interval is 0 the \"fromXXX\" values are used for the beginning of the interpolation. When interval is 1, the \"toXXX\" values are used for the end of interpolation. When interval value is in between, interpolated values are used (see diagram below). The interpolation is linear and along straight line between \"from\" and \"to\" positions. If curve is needed, then it should be constructed from multiple straight sections or by dynamically changing value of position params during the interpolation cycle, similar to [https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_curves Quadratic Curve animation] (see Example 3).\n&lt;br&gt;The [[velocity]] param doesn't do much in SP, but in MP, provided the velocity component is set correctly, it helps the engine to figure out what the next position of the moving object should be on other clients.\n&lt;br&gt;&lt;br&gt;\nThe actual approximate interpolation formula for this command is:\n&lt;code&gt;_vecCurrent <ext><name>nowiki</name><attr/><inner>=</inner><close>&lt;/nowiki&gt;</close></ext> _vecFrom [[vectorAdd]] (_vecTo [[vectorDiff]] _vecFrom [[vectorMultiply]] _interval);&lt;/code&gt;&lt;br&gt;&lt;br&gt;\n[[Image:setVelocityTransformation.jpg|800px]]\n&lt;br&gt;&lt;br&gt;\n<template lineStart=\"1\"><title>Informative </title><part><name index=\"1\"/><value> For continuous movement this command should be executed each frame while changing interval value. For example to apply interpolation for 10 seconds one could use the following command to translate 10 seconds into 0...1 interval:\n&lt;code&gt;t1 <ext><name>nowiki</name><attr/><inner>=</inner><close>&lt;/nowiki&gt;</close></ext> [[time]]; \nt2 <ext><name>nowiki</name><attr/><inner>=</inner><close>&lt;/nowiki&gt;</close></ext> [[time]] + 10;&lt;/code&gt; \nLater inside some on frame event...\n&lt;code&gt;_interval <ext><name>nowiki</name><attr/><inner>=</inner><close>&lt;/nowiki&gt;</close></ext> [[linearConversion]] [t1, t2, [[time]], 0, 1];&lt;/code&gt; </value></part></template>&lt;br&gt;\n<template lineStart=\"1\"><title>Important </title><part><name index=\"1\"/><value> In multiplayer, this command should be applied where object is [[local]]</value></part></template> &lt;br&gt;&lt;br&gt;</value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> object '''setVelocityTransformation''' [fromPosASL, toPosASL, fromVelocity, toVelocity, fromVectorDir, toVectorDir, fromVectorUp, toVectorUp, interval] </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name>p1</name>=<value> object: [[Object]] - object to be interpolated </value></part><part><name/>=<value> \n</value></part><part><name>p2</name>=<value> [fromPosASL, toPosASL, fromVelocity, toVelocity, fromVectorDir, toVectorDir, fromVectorUp, toVectorUp, interval] : [[Array]]\n</value></part><part><name>p3</name>=<value> fromPosASL: [[PositionASL]] - starting [[getPosASL]] of the object\n</value></part><part><name>p4</name>=<value> toPosASL: [[PositionASL]] - ending [[getPosASL]] of the object \n</value></part><part><name>p5</name>=<value> fromVelocity: [[Array]] - starting [[velocity]] of the object\n</value></part><part><name>p6</name>=<value> toVelocity: [[Array]] - ending [[velocity]]  of the object\n</value></part><part><name>p7</name>=<value> fromVectorDir: [[Array]] - starting [[vectorDir]]  of the object\n</value></part><part><name>p8</name>=<value> toVectorDir: [[Array]] - ending [[vectorDir]]  of the object\n</value></part><part><name>p9</name>=<value> fromVectorUp: [[Array]] - starting [[vectorUp]]  of the object\n</value></part><part><name>p10</name>=<value> toVectorUp: [[Array]] - ending [[vectorUp]]  of the object\n</value></part><part><name>p11</name>=<value> interval: [[Number]] - interpolation interval (variable value, normally between 0 and 1)\n</value></part><part><name index=\"5\"/><value> [[Nothing]] </value></part><part><name>RETURNVALUE</name>=<value>\n\n____________________________________________________________________________________________\n\n</value></part><part><name>x1</name>=<value> &lt;code&gt;_tracker [[setVelocityTransformation]] \n[\n\t_currentPos,\n\t_nextPos,\n\t_currentVelocity,\n\t_nextVelocity,\n\t_currentVectorDir,\n\t_nextVectorDir,\n\t_currentVectorUp,\n\t_nextVectorUp,\n\t_interval\n];&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> Bob on imaginary stairway to heaven:&lt;code&gt;bob = [[createAgent]] [\"C_man_1\", [[player]] [[getRelPos]] [5, 0], [], 0, \"CAN_COLLIDE\"]; \nbob [[switchMove]] \"ladderciviluploop\";\npos1 = [[getPosASL]] bob;\npos2 = pos1 [[vectorAdd]] [0,0,0.75];\nbob [[addEventHandler]] [\"AnimDone\", \n{\n\tpos1 = pos2; \n\tpos2 = pos2 [[vectorAdd]] [0,0,0.75]\n}];\n[[onEachFrame]]\n{\n\t[[if]] (![[alive]] bob) [[then]] \n\t{\n\t\t[[onEachFrame]] {}; \n\t\tbob [[switchMove]] \"\";\n\t\tbob [[removeAllEventHandlers]] \"AnimDone\";\n\t};\n\tbob [[setVelocityTransformation]] [\n\t\tpos1, \n\t\tpos2, \n\t\t[0,0,0], \n\t\t[0,0,0], \n\t\t[0,1,0], \n\t\t[0,1,0], \n\t\t[0,0,1], \n\t\t[0,0,1],\n\t\t[[moveTime]] bob\n\t];\n};&lt;/code&gt; </value></part><part><name>EXAMPLE2</name>=<value>\n\n</value></part><part><name>x3</name>=<value> Advanced trickery with curved movement. The curve is controlled with one control point (controlPointASL), just like quadratic B\u00e9zier curve:&lt;code&gt;[[disableSerialization]];\n[[player]] [[setDir]] 0;\ninterval = 0;\n_disp = [[findDisplay]] 46 [[createDisplay]] \"RscDisplayEmpty\";\n_ctrl = _disp [[ctrlCreate]] [\"RscSlider\", -1];\n_ctrl [[ctrlSetPosition]] [<ext><name>nowiki</name><attr/></ext>[[safeZoneX]] + 0.1, 1, [[safeZoneW]] - 0.2, 0.1];\n_ctrl [[ctrlSetActiveColor]] [1,0,0,1];\n_ctrl [[ctrlCommit]] 0;\n_ctrl [[sliderSetPosition]] 0;\n_ctrl [[sliderSetRange]] [0,1];\n_ctrl [[sliderSetSpeed]] [0.1,0.5];\n_ctrl [[ctrlAddEventHandler]] [\"SliderPosChanged\", {interval = [[_this]] [[select]] 1}];\n[[ctrlSetFocus]] _ctrl;\nbox = \"Land_VR_Shape_01_cube_1m_F\" [[createVehicle]] [0,0,0];\ncontrolPointASL = [[AGLtoASL]] ([[player]] [[getRelPos]] [70, -30]) [[vectorAdd]] [0, 0, 30];\nfromPosASL = [[AGLtoASL]] ([[player]] [[getRelPos]] [10, -45]);\ntoPosASL = [[AGLtoASL]] ([[player]] [[getRelPos]] [10, 45]);\nfromControlPointOffset = controlPointASL [[vectorDiff]] fromPosASL;\ntoControlPointOffset = toPosASL [[vectorDiff]] controlPointASL;\n[[onEachFrame]]\n{\n\t[[hintSilent]] [[format]] [\"Interval: %1\", interval];\n\tbox [[setVelocityTransformation]]\n\t[\n\t\tfromPosASL [[vectorAdd]] (fromControlPointOffset [[vectorMultiply]] interval),\n\t\tcontrolPointASL [[vectorAdd]] (toControlPointOffset [[vectorMultiply]] interval),\n\t\t[0,0,0],\n\t\t[0,0,0],\n\t\t[0,1,0],\n\t\t[1,0,0],\n\t\t[0,0,1],\n\t\t[0,1,0],\n\t\tinterval\n\t];\n};&lt;/code&gt; </value></part><part><name>EXAMPLE3</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[velocity]], [[setVelocity]], [[velocityModelSpace]], [[setVelocityModelSpace]], [[speed]], [[moveTime]] </value></part><part><name>SEEALSO</name>=<value>\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dd class=\"notedate\"&gt;Posted on Aug 4, 2014 \u2013 12:35\n&lt;dt class=\"note\"&gt;[[User:ffur2007slx2_5|ffur2007slx2_5]]&lt;dd class=\"note\"&gt;\n(A3 1.24) Generally speaking [[setVelocityTransformation]] is more likely a combination of [[setPosASL]], [[setVectorDirAndUp]] (or [[BIS_fnc_setPitchBank]]) and time multiplier. It can be used as a position tracker with all necessary information collected, copied and then released within one function. Here\u2019s a simple reproduction on how [[setVelocityTransformation]] works in game:\n&lt;code&gt;\n[[private]] [\"_dataOld\",\"_dataNext\",\"_capturedData\",\"_obj\",\"_fps\",\"_startTrackingTime\",\"_stepOld\",\"_stepNext\",\"_tracker\",\"_tempTime\"];\n_stepOld = 0;\n_tempTime = 0;\n_stepNext = 1;\n[[while]] {[[true]]} [[do]] {\n  _capturedData = _capturedData + [[ [[getPosASL]] _obj,[[velocity]] _obj,[[vectorDir]] _obj,[[vectorUp]] _obj]];\n  [[sleep]] _fps;\n  _tempTime = _tempTime + _fps;\n  [[if]] (_tempTime &gt;= _startTrackingTime) [[then]] {\n        _dataOld = _capturedData [[select]] _stepOld;\n\t_dataNext = _capturedData [[select]] _stepNext;\n\t_stepOld = _stepOld + 1;\n\t_stepNext = [[if]] (_stepNext &gt;= ([[count]] _capturedData)) [[then]] [{_stepOld},{_stepNext + 1}];\n_tracker [[setVelocityTransformation]] \n[_dataOld [[select]] 0,_dataNext [[select]] 0,_dataOld [[select]] 1,_dataNext [[select]] 1,\n_dataOld [[select]] 2,_dataNext [[select]] 2,_dataOld [[select]] 3,_dataNext [[select]] 3,1];\n  };\n};&lt;/code&gt;\nTracker starts coping the route and stance from the object when time start counting. TimeDiff determines the distance multiply between the current position and the next position.\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Arma 2: Operation Arrowhead: New Scripting Commands List|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on July 4, 2020 - 08:11 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:DrSova|DrSova]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nYou cant apply this command to the dead body in ragdoll\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}