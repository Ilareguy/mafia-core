{"parse":{"title":"setVectorDirAndUp","pageid":6823,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> arma </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.09</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>arg</name>=<value> local </value></part><part><name>MP Arguments</name>=<value>\n\n</value></part><part><name>eff</name>=<value> global </value></part><part><name>MP Effect</name>=<value>\n\n</value></part><part><name>gr2</name>=<value> Math - Vectors </value></part><part><name>GROUP2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> [[File:Vectordirandup.jpg|right|300px]] Sets orientation of an object.\nThe command takes 2 vector arrays, one for [[vectorDir]] and one for [[vectorUp]].\nDefault object orientation will always have [[vectorDir]] pointing forward (North) along Y axis and [[vectorUp]] pointing up along Z axis - [[0,1,0],[0,0,1]], as shown on the diagram below (see also [[BIS_fnc_transformVectorDirAndUp]]).&lt;br&gt;\n\nWhen attaching object to an object the axes are relative to the object that gets the attachment.\nIf it is player object for example, then X goes from left to right, Y goes from back to front, and Z goes from down up.&lt;br&gt;\n\nThe [[setDir]] command is incompatible with [[setVectorDirAndUp]] and should not be used together on the same object.\nUsing [[setVectorDirAndUp]] alone should be sufficient for any orientation. &lt;div style<template><title>=</title></template>\"clear: both\"&gt;&lt;/div&gt; </value></part><part><name>DESCRIPTION</name>=<value>\n\n</value></part><part><name>mp</name>=<value> [[setVectorDirAndUp]] must be executed on the machine where the object it applied to is [[local]]. </value></part><part><name>Multiplayer</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> vehicle [[setVectorDirAndUp]] [[x1, y1, z1], [x2, y2, z2]] </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name>p1</name>=<value> vehicle: [[Object]] </value></part><part><name>PARAMETER1</name>=<value>\n\n</value></part><part><name>p2</name>=<value> [[x1, y1, z1], [x2, y2, z2]]: [[Array]] </value></part><part><name>PARAMETER2</name>=<value>\n\n</value></part><part><name>p3</name>=<value> [x1, y1, z1]: [[Array]] - [[vectorDir]] </value></part><part><name>PARAMETER3</name>=<value>\n\n</value></part><part><name>p4</name>=<value> [x2, y2, z2]: [[Array]] - [[vectorUp]] </value></part><part><name>PARAMETER4</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Nothing]] </value></part><part><name>RETURNVALUE</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name>x1</name>=<value> &lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>set exact yaw, pitch, and roll</value></part></template>\n_y = 45; _p = -80; _r = 0;\nBRICK [[setVectorDirAndUp]] [\n\t[<ext><name>nowiki</name><attr/></ext>[[sin]] _y * [[cos]] _p, [[cos]] _y * [[cos]] _p, [[sin]] _p],\n\t<ext><name>nowiki</name><attr/><inner>[[</inner><close>&lt;/nowiki&gt;</close></ext>[[sin]] _r, -[[sin]] _p, [[cos]] _r * [[cos]] _p], -_y] [[call]] [[BIS_fnc_rotateVector2D]]\n];&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> To rotate BRICK on Z axis 90 degrees clockwise, change its [[vectorDir]] but leave [[vectorUp]] unchanged.\n&lt;code&gt;BRICK [[setVectorDirAndUp]] [[1,0,0], [0,0,1]];&lt;/code&gt; </value></part><part><name>EXAMPLE2</name>=<value>\n\n</value></part><part><name>x3</name>=<value> To rotate BRICK on Y axis 90 degrees clockwise, change its [[vectorUp]] but leave [[vectorDir]] unchanged.\n&lt;code&gt;BRICK [[setVectorDirAndUp]] [[0,1,0], [1,0,0]];&lt;/code&gt; </value></part><part><name>EXAMPLE3</name>=<value>\n\n</value></part><part><name>x4</name>=<value> To rotate BRICK on X axis 90 degrees (tilt forward), change both [[vectorDir]] and [[vectorUp]] accordingly.\n&lt;code&gt;BRICK [[setVectorDirAndUp]] [[0,0,-1], [0,1,0]];&lt;/code&gt; </value></part><part><name>EXAMPLE4</name>=<value>\n</value></part><part><name>x5</name>=<value> More complex orientations\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>tilt forward 90 + rotate left 90</value></part></template>\nBRICK [[setVectorDirAndUp]] [[1,0,0], [0,1,0]];\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>tilt backward 45 degrees</value></part></template>\nBRICK [[setVectorDirAndUp]] [[0,0.5,0.5], [0,-0.5,0.5]];\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>tilt forward 30 degrees</value></part></template>\nBRICK [[setVectorDirAndUp]] [[0,0.66,-0.33], [0,0.33,0.66]];\n&lt;/code&gt;</value></part><part><name>EXAMPLE5</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value>[[vectorDir]], [[vectorUp]], [[setVectorDir]], [[setVectorUp]], [[vectorDiff]], [[vectorAdd]], [[vectorMultiply]], [[vectorCrossProduct]], [[vectorDistance]], [[vectorMagnitudeSqr]], [[vectorDistanceSqr]], [[vectorCos]], [[vectorMagnitude]], [[vectorDotProduct]], [[vectorNormalized]], [[vectorFromTo]], [[BIS_fnc_transformVectorDirAndUp]] </value></part><part><name>SEEALSO</name>=<value>\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dd class=\"notedate\"&gt;Posted on March 16, 2008 - 09:50\n&lt;dt class=\"note\"&gt;[[User:Str|Str]]\n&lt;dd class=\"note\"&gt;Command can be also used to rotate camera in all three axis (which also mean it is possible to set camera bank).\n\n&lt;dd class=\"notedate\"&gt;Posted on May 9, 2008 - 09:32\n&lt;dt class=\"note\"&gt;[[User:General Barron|General Barron]]\n&lt;dd class=\"note\"&gt;The object's vectorDir can only control its pitch, while its vectorUp can only control its bank. To set an object's yaw (direction), use the setdir command, before using this command.\nYou would think vectorUp would control pitch as well, but any pitch that would be set due to vectorUp is ignored. The same is true with vectorDir and yaw; any vectorDir that would adjust yaw is also ignored. If this doesn't make sense, try to visualize it with a box or soda can.\nThis command does NOT work with values relative to a unit, but rather it works with world vectors (think world coordinates as opposed to model coordinates). As a result, this command can be difficult to use in many situations, because the input values needed to get a certain pitch / bank for an object vary, depending on what direction the object is facing (yaw).\nA function to set an object's pitch / bank can be found [http://www.flashpoint1985.com/cgi-bin/ikonboard311/ikonboard.cgi?s=e219d8da3fd34cabd2501a118a297257;act=ST;f=71;t=73312 here]\n\n&lt;dd class=\"notedate\"&gt;Posted on October 23rd, 2009 - 18:39\n&lt;dt class=\"note\"&gt;[[User:Chris330|Chris330]]\n&lt;dd class=\"note\"&gt;\nNote this odd command may now be better understood. There's a thread about it here:\n[http://forums.bistudio.com/showthread.php?p=1470985#post1470985 BI Studios Forum Thread]\n\n&lt;dd class=\"notedate\"&gt;Posted on 1 Jun, 2014 - 1845\n&lt;dt class=\"note\"&gt;[[User:ffur2007slx2_5|ffur2007slx2_5]]\n&lt;dd class=\"note\"&gt;\n(Arma 3 ver 1.20) [[setDir]] overwrites [[setVectorDirAndUp]] (P.S. [[setVectorDirAndUp]] also affects [[setVelocity]].), so use [[setDir]] before [[BIS_fnc_setPitchBank]], which is an easier workaround on vector, if changing yaw, pitch and bank are needed. [[setVectorDirAndUp]] is CCW, so if we wanna to set an obj 40 degrees CW, 170 degrees pitch and 85 degrees bank:\n&lt;code&gt;_obj [[setDir]] (40 - 180); [_obj, 170, 85] [[call]] [[BIS_fnc_setPitchBank]];&lt;/code&gt;\nSame as:\n&lt;code&gt;_obj [[setVectorDirAndUp]] [[0.63,0.75,0.17],[-0.75,0.65,-0.084]];&lt;/code&gt;\nBe aware that [[attachTo]] may flip [[vectorDir]] if pitch beyond 90 degrees and cause unexpected behavior to [[BIS_fnc_setPitchBank]], e.g.\n&lt;code&gt;[_obj, 100, 0] [[call]] [[BIS_fnc_setPitchBank]]; //vector: [-0.14,-0.09,0.98],[-0.83,-0.51,-0.17]&lt;/code&gt;\n&lt;code&gt;_obj [[attachTo]] [_logic,[0,0,2]];\n[_obj, 100, 0] [[call]] [[BIS_fnc_setPitchBank]]; //vector: [0.11,0.33,0.93],[-0.06,0.94,-0.32]\ncompass direction algorism failed if obj was attached at present.&lt;/code&gt;\nTo overcome such limitation we can use fallowing function for a better workaround. (code originated from '''bapedibupa'', remodified)\n&lt;code&gt;_obj [[attachTo]] [_logic,[0,0,2]];\n[_obj,[120,-78,37]] [[call]] fnc_SetPitchBankYaw; // pitch: 120, bank: -78, yaw: 37&lt;/code&gt;\n&lt;code&gt;fnc_SetPitchBankYaw = {\n\t[[private]] [\"_object\",\"_rotations\",\"_aroundX\",\"_aroundY\",\"_aroundZ\",\"_dirX\",\"_dirY\",\n\t\"_dirZ\",\"_upX\",\"_upY\",\"_upZ\",\"_dir\",\"_up\",\"_dirXTemp\",\"_upXTemp\"];\n\t_object = _this [[select]] 0;\n\t_rotations = _this [[select]] 1;\n\t_aroundX = _rotations [[select]] 0;\n\t_aroundY = _rotations [[select]] 1;\n\t_aroundZ = (360 - (_rotations [[select]] 2)) - 360;\n\t_dirX = 0;\n\t_dirY = 1;\n\t_dirZ = 0;\n\t_upX = 0;\n\t_upY = 0;\n\t_upZ = 1;\n\t[[if]] (_aroundX != 0) [[then]] {\n\t\t_dirY = [[cos]] _aroundX;\n\t\t_dirZ = [[sin]] _aroundX;\n\t\t_upY = -[[sin]] _aroundX;\n\t\t_upZ = [[cos]] _aroundX;\n\t};\n\t[[if]] (_aroundY != 0) [[then]] {\n\t\t_dirX = _dirZ * [[sin]] _aroundY;\n\t\t_dirZ = _dirZ * [[cos]] _aroundY;\n\t\t_upX = _upZ * [[sin]] _aroundY;\n\t\t_upZ = _upZ * [[cos]] _aroundY;\n\t};\n\t[[if]] (_aroundZ != 0) [[then]] {\n\t\t_dirXTemp = _dirX;\n\t\t_dirX = (_dirXTemp* [[cos]] _aroundZ) - (_dirY * [[sin]] _aroundZ);\n\t\t_dirY = (_dirY * [[cos]] _aroundZ) + (_dirXTemp * [[sin]] _aroundZ);\n\t\t_upXTemp = _upX;\n\t\t_upX = (_upXTemp * [[cos]] _aroundZ) - (_upY * [[sin]] _aroundZ);\n\t\t_upY = (_upY * [[cos]] _aroundZ) + (_upXTemp * [[sin]] _aroundZ); \n\t};\n\t_dir = [_dirX,_dirY,_dirZ];\n\t_up = [_upX,_upY,_upZ];\n\t_object [[setVectorDirAndUp]] [_dir,_up];\n};\n&lt;/code&gt;\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n[[Category:Scripting Commands OFP Elite|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]</root>"}}}