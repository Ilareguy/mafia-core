{"parse":{"title":"vectorFromTo","pageid":15591,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> arma3 </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.26</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>gr2</name>=<value> Math - Vectors </value></part><part><name>GROUP2</name>=<value>\n\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Unit vector, equal to direction from vector1 to vector2. In other words this command produces [[vectorNormalized | normalised vector]] between given 2 points. To get a normal vector use [[vectorDiff]]. </value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> vector1 [[vectorFromTo]] vector2 </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name>p1</name>=<value> vector1: [[Array]] - vector 3D or 2D (since Arma 3 v1.99.146539, z coordinate is defaulted to 0) </value></part><part><name>PARAMETER1</name>=<value>\n\n</value></part><part><name>p2</name>=<value> vector2: [[Array]] - vector 3D or 2D (since Arma 3 v1.99.146539, z coordinate is defaulted to 0) </value></part><part><name>PARAMETER2</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Array]] </value></part><part><name>RETURNVALUE</name>=<value>\n____________________________________________________________________________________________\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;[1,2,3] [[vectorFromTo]] [4,5,6]; //[0.57735,0.57735,0.57735]\n\n//is the same as\n\n[[vectorNormalized]] ([4,5,6] [[vectorDiff]] [1,2,3]); //[0.57735,0.57735,0.57735]\n&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[vectorDiff]], [[vectorCrossProduct]], [[vectorDotProduct]], [[vectorCos]], [[vectorMagnitude]], [[vectorMagnitudeSqr]], [[vectorMultiply]], [[vectorDistance]], [[vectorDistanceSqr]], [[vectorDir]], [[vectorUp]], [[setVectorDir]], [[setVectorUp]], [[setVectorDirAndUp]], [[vectorNormalized]], [[matrixMultiply]], [[matrixTranspose]]  </value></part><part><name>SEEALSO</name>=<value>\n\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dd class=\"notedate\"&gt;Posted on 19 Jul, 2014\n&lt;dt class=\"note\"&gt;[[User:ffur2007slx2_5| ffur2007slx2_5]]\n&lt;dd class=\"note\"&gt;\n(ArmA3 1.26) Algorithm:\n&lt;code&gt;Vector1 = [x1,y1,z1]; Vector2 = [x2,y2,z2];\nResult = [(x1 \u2013 x2)/([[sqrt]] ((x1 \u2013 x2) ^ 2 + (y1 \u2013 y2) ^ 2 + (z1 \u2013 z2) ^ 2)), \n          (y1 \u2013 y2)/([[sqrt]] ((x1 \u2013 x2) ^ 2 + (y1 \u2013 y2) ^ 2 + (z1 \u2013 z2) ^ 2)), \n          (z1 \u2013 z2)/([[sqrt]] ((x1 \u2013 x2) ^ 2 + (y1 \u2013 y2) ^ 2 + (z1 \u2013 z2) ^ 2))];\n&lt;/code&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;</root>"}}}