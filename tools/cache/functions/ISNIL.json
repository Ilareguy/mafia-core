{"parse":{"title":"isNil","pageid":2676,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> arma </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.00</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Variables </value></part><part><name>GROUP1</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Tests whether the variable given by its name is [[nil]] or undefined, or whether the given expression evaluates to [[nil]] or [[Nothing]].\n<template lineStart=\"1\"><title>Informative </title><part><name index=\"1\"/><value> <template><title>GVI</title><part><name index=\"1\"/><value>ofp</value></part><part><name index=\"2\"/><value>1.00</value></part></template> This command doesn't exist in <template><title>ofp</title></template> but can be emulated (see '''[[#Examples|Example 5]]''').</value></part></template> </value></part><part><name>Description</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> [[isNil]] variableName </value></part><part><name>Syntax</name>=<value>\n\n</value></part><part><name>p1</name>=<value> variableName: [[String]] - name of a [[missionNamespace]] variable (e.g \"someVar\") or a local variable (e.g \"_someVar\") </value></part><part><name>Parameter 1</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Boolean]] - [[true]] if variable is [[nil]] </value></part><part><name>Return value</name>=<value>\n\n</value></part><part><name>s2</name>=<value> [[isNil]] code </value></part><part><name>Syntax 2</name>=<value>\n\n</value></part><part><name>p21</name>=<value> code: [[Code]] - code to evaluate:\n* the code '''will''' be executed; <template><title>Inline code</title><part><name index=\"1\"/><value>[[isNil]] { [[player]] [[setDamage]] 1; };</value></part></template> ''will'' kill the player\n* the code will not be allowed [[canSuspend|to suspend]] while expression is evaluated, even if the parent scope allows it (see '''[[#Examples|Example 4]]'''). </value></part><part><name>Parameter 21</name>=<value>\n\n</value></part><part><name>r2</name>=<value> [[Boolean]] - [[true]] if code returns something other than [[Nothing]] </value></part><part><name>Return value 2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name>x1</name>=<value> &lt;code&gt;[[if]] ([[isNil]] \"pokus\") [[then]] { pokus = 0; };&lt;/code&gt; </value></part><part><name>Example1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;[[isNil]] { [[player]] [[getVariable]] \"someVar\" };&lt;/code&gt; </value></part><part><name>Example2</name>=<value>\n\n</value></part><part><name>x3</name>=<value> &lt;code&gt;_myArray = [0, 1];\n[[isNil]] { _myArray [[select]] 0 }; <template><title>cc</title><part><name index=\"1\"/><value>returns [[false]]</value></part></template>\n[[isNil]] { _myArray [[select]] 1 }; <template><title>cc</title><part><name index=\"1\"/><value>returns [[false]]</value></part></template>\n[[isNil]] { _myArray [[select]] 2 }; <template><title>cc</title><part><name index=\"1\"/><value>returns [[true]]</value></part></template>\n[[isNil]] { _myArray [[select]] 3 }; <template><title>cc</title><part><name index=\"1\"/><value>throws a script error. only length+1 select is allowed</value></part></template>\n&lt;/code&gt; </value></part><part><name>Example 3</name>=<value>\n\n</value></part><part><name>x4</name>=<value> You can do this trick to force execute something in [[Scheduler|Unscheduled Environment]].&lt;code&gt;[[spawn]] {\n\t[[systemChat]] [[str]] [[canSuspend]]; <template><title>cc</title><part><name index=\"1\"/><value>chat shows [[true]]</value></part></template>\n\t[[isNil]] {[[hint]] [[str]] [[canSuspend]]}; <template><title>cc</title><part><name index=\"1\"/><value>hint shows [[false]]</value></part></template>\n};&lt;/code&gt; </value></part><part><name>Example 4</name>=<value>\n\n</value></part><part><name>x5</name>=<value> <template><title>ofp</title></template> workaround:&lt;br&gt;SQS syntax:\n&lt;code&gt;_nil = [[format]] [\"%1\", _undefinedVariable]\n? ([[format]] [\"%1\", foo] == _nil) : foo = \"value\"&lt;/code&gt;\nSQF syntax:\n&lt;code&gt;_nil = [[format]] [\"%1\", _undefinedVariable];\n[[if]] ([[format]] [\"%1\", foo] == _nil) [[then]] { foo = \"value\"; };&lt;/code&gt;\n </value></part><part><name>Example 5</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[nil]], [[Variables]], [[Scheduler]] </value></part><part><name>See also</name>=<value>\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]</root>"}}}