{"parse":{"title":"call","pageid":4677,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> ofpr </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Program Flow </value></part><part><name>GROUP1</name>=<value>\n\n\n\n</value></part><part><name index=\"2\"/><value>1.85</value></part><part><name>Game version</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Adds given set of compiled instructions to the current stack and waits for it to finish and return, provides an option to pass arguments to the executed [[Code]].&lt;br&gt;&lt;br&gt;\n<template lineStart=\"1\"><title>Important</title><part><name index=\"1\"/><value>In [[:Category:<template><title>ofp</title></template>|<template><title>ofp</title></template>]] this command used to accept [[String]] as well as [[Code]]. This does not apply to <template><title>arma</title></template> and later titles (see [[compile]]).</value></part></template></value></part><part><name>Description</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> [[call]] code </value></part><part><name>Syntax</name>=<value>\n\n</value></part><part><name>p1</name>=<value> code: [[Code]] - [[compile]]d instructions</value></part><part><name>Parameter 1</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Anything]] - The last value given in the function is returned. See the topic [[Function#Return_Values|Function]] for more information. </value></part><part><name>Return value</name>=<value>\n\n</value></part><part><name>s2</name>=<value> args [[call]] code </value></part><part><name>Alt Syntax</name>=<value>\n\n</value></part><part><name>p21</name>=<value> args: [[Anything]] -  Arguments that are passed to the function in the [[_this]] variable </value></part><part><name>Alt Parameter 1</name>=<value>\n\n</value></part><part><name>p22</name>=<value> code: [[Code]] - [[compile|compiled]] instructions</value></part><part><name>Alt Parameter 2</name>=<value>\n\n</value></part><part><name>r2</name>=<value> [[Anything]] - The last value given in the function is returned. See the topic [[Function#Return_Values|Function]] for more information. </value></part><part><name>Return value 2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name>x1</name>=<value> &lt;code&gt;[[call]] { [[hint]] [[str]] 123; };&lt;/code&gt; </value></part><part><name>Example 1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;123 [[call]] { [[hint]] [[str]] _this; };&lt;/code&gt; </value></part><part><name>Example 2</name>=<value>\n\n</value></part><part><name>x3</name>=<value> &lt;code&gt;_sum = [1, 2] [[call]] { ([[_this]] [[select]] 0) + ([[_this]] [[select]] 1); };\n[[hint]] [[str]] _sum; <template><title>codecomment</title><part><name index=\"1\"/><value>// displays 3</value></part></template>&lt;/code&gt; </value></part><part><name>Example 3</name>=<value>\n\n</value></part><part><name>x4</name>=<value> &lt;code&gt;123 [[call]] [[compile]] \"[[hint]] [[str]] _this;\";&lt;/code&gt; </value></part><part><name>Example 4</name>=<value>\n\n</value></part><part><name>x5</name>=<value> &lt;code&gt;_result = 123 [[call]] [[compile]] [[preprocessFileLineNumbers]] \"myFile.sqf\";&lt;/code&gt; </value></part><part><name>Example 5</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[spawn]], [[execVM]], [[canSuspend]], [[compile]], [[preprocessFile]], [[remoteExec]], [[remoteExecCall]] </value></part><part><name>See also</name>=<value>\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.96|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.99|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Armed Assault|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on July 5, 2014 - 16:00 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:MattAka Horner|MattAka Horner]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;A called function may only use suspension ([[sleep]], [[uiSleep]], [[waitUntil]]) if it originates in a [[Scheduler#Scheduled_Environment|scheduled environment]]. If the called function originates in a [[Scheduler#Unscheduled_Environment|non-scheduled environment]] it will return a generic error:\n&lt;code&gt;<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Unscheduled_Environment|non-scheduled]] origin ***</value></part></template>\n[] [[spawn]] {\n\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Scheduled_Environment|scheduled]] scope ***</value></part></template>\n\t[] [[call]] {\n\t\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Scheduled_Environment|scheduled]] scope ***</value></part></template>\n\t\t[[sleep]] 3; <template><title>codecomment</title><part><name index=\"1\"/><value>// &lt;- OK</value></part></template>\n\t\t[[hintSilent]] \"Hello World!\";\n\t};\n};&lt;/code&gt;\n\n&lt;code&gt;<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Unscheduled_Environment|non-scheduled]] origin ***</value></part></template>\n[] [[call]] {\n\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Unscheduled_Environment|non-scheduled]] scope***</value></part></template>\n\t[] [[call]] {\n\t\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Unscheduled_Environment|non-scheduled]] scope ***</value></part></template>\n\t\t[[sleep]] 3; <template><title>codecomment</title><part><name index=\"1\"/><value>// &lt;- NOT OK</value></part></template>\n\t\t[[hintSilent]] \"Hello World!\";\n\t};\n};&lt;/code&gt;\n\n&lt;code&gt;<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Scheduled_Environment|scheduled]] origin ***</value></part></template>\n[] [[spawn]] {\n\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Scheduled_Environment|scheduled]] scope ***</value></part></template>\n\t[] [[call]] {\n\t\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Scheduled_Environment|scheduled]] scope ***</value></part></template>\n\t\t[[sleep]] 3; <template><title>codecomment</title><part><name index=\"1\"/><value>// &lt;- OK</value></part></template>\n\t\t[[hintSilent]] \"Hello World!\";\n\t};\n};&lt;/code&gt;\n\n&lt;code&gt;<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Scheduled_Environment|scheduled]] origin ***</value></part></template>\n[] [[call]] {\n\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Scheduled_Environment|scheduled]] scope ***</value></part></template>\n\t[] [[call]] {\n\t\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Scheduled_Environment|scheduled]] scope ***</value></part></template>\n\t\t[[sleep]] 3; <template><title>codecomment</title><part><name index=\"1\"/><value>// &lt;- OK</value></part></template>\n\t\t[[hintSilent]] \"Hello World!\";\n\t};\n};&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on February 17, 2015 - 11:02 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Patriot821|Patriot821]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;If the code is in [[Scheduler#Unscheduled_Environment|non-scheduled]] scope and contains while-do statement, the code runs only 10,000 times at the maximum, even if the statement makes infinite loop. (ARMA3 Ver. 1.38.128937)\n&lt;code&gt;<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Unscheduled_Environment|non-scheduled]] origin ***</value></part></template>\n[] [[call]] {\n\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Unscheduled_Environment|non-scheduled]] scope ***</value></part></template>\n\t[] [[call]] {\n\t\t<template><title>codecomment</title><part><name index=\"1\"/><value>// *** [[Scheduler#Unscheduled_Environment|non-scheduled]] scope ***</value></part></template>\n\t\t_a = 0;\n\t\t[[while]] { _a &lt; 15000 } [[do]] {\n\t\t\t_a = _a + 1;\n\t\t};\n\t\t[[hint]] [[str]] _a; <template><title>codecomment</title><part><name index=\"1\"/><value>// displays 10000</value></part></template>\n\t};\t\n};&lt;/code&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}