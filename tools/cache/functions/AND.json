{"parse":{"title":"and","pageid":1385,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> ofp </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.00</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Variables </value></part><part><name>GROUP1</name>=<value>\n\n</value></part><part><name>gr2</name>=<value> Math </value></part><part><name>GROUP2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Returns [[true]] only if both conditions are [[true]]. In case of the alternative syntax, [http://en.wikipedia.org/wiki/Lazy_evaluation#Control_structures lazy evaluation] is used (if left operand is [[false]], evaluation of the right side is skipped completely). </value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> [[Boolean]] <ext><name>nowiki</name><attr/><inner>=</inner><close>&lt;/nowiki&gt;</close></ext> a '''and''' b </value></part><part><name>SYNTAX</name>=<value>\n</value></part><part><name>p1</name>=<value> a: [[Boolean]] - Test condition or variable that returns [[Boolean]]. </value></part><part><name>PARAMETER1</name>=<value>\n</value></part><part><name>p2</name>=<value> b: [[Boolean]] - Test condition or variable that returns [[Boolean]]. </value></part><part><name>PARAMETER2</name>=<value>\n</value></part><part><name index=\"5\"/><value> [[Boolean]] </value></part><part><name>RETURNVALUE</name>=<value>\n\n\n\n</value></part><part><name>s2</name>=<value> [[Boolean]] <ext><name>nowiki</name><attr/><inner>=</inner><close>&lt;/nowiki&gt;</close></ext> a '''and''' b (''Only available since ArmA 2:OA v1.62.'') </value></part><part><name>SYNTAX2</name>=<value>\n\n</value></part><part><name>p21</name>=<value> a: [[Boolean]] - Test condition or variable that returns [[Boolean]]. </value></part><part><name>PARAMETER21</name>=<value>\n</value></part><part><name>p22</name>=<value> b: [[Code]] - Code that returns [[Boolean]]. It is not evaluated if '''a''' returns as [[false]]. </value></part><part><name>PARAMETER22</name>=<value>\n</value></part><part><name>r2</name>=<value> [[Boolean]] </value></part><part><name>RETURNVALUE2</name>=<value>\n____________________________________________________________________________________________\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;[[if]] (([[alive]] [[player]]) and (_enemycount == 0)) then {[[hint]] \"you win !\"}&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n</value></part><part><name>x2</name>=<value> &lt;code&gt;[[if]] (([[count]] _array &gt; 0) and {(_array [[select]] 0) == [[player]]}) then {[[hint]] \"It works! Without lazy evaluation it would throw an error if array was empty.\"}&lt;/code&gt; </value></part><part><name>EXAMPLE2</name>=<value>\n\n</value></part><part><name>mp</name>=<value> no special considerations</value></part><part><name/>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[a &amp;&amp; b]], [[or]], [[Operators]] </value></part><part><name>SEEALSO</name>=<value>\n\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment><comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n\n[[Category:Scripting Commands|AND]]\n[[Category:Scripting Commands OFP 1.99|AND]]\n[[Category:Scripting Commands OFP 1.96|AND]]\n[[Category:Scripting Commands OFP 1.46|AND]]\n[[Category:Scripting Commands Armed Assault|AND]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on April 12, 2015 - 10:45 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:IT07|IT07]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nJust like the \"or\" command, the \"and\" command allows several conditions to be checked. Example: &lt;br&gt;\n&lt;code&gt;if(alive player and speed player &gt; 0 and _someOtherVar) then { hint\"All three condtions are true\" };&lt;/code&gt;\nThe example above will check if the player is alive and if the player is moving and checks if _someOtherVar is true.\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}