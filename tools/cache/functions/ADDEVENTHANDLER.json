{"parse":{"title":"addEventHandler","pageid":1364,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> ofpr </value></part><part><name/>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.85</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>arg</name>=<value> global </value></part><part><name>MParg</name>=<value>\n\n</value></part><part><name>eff</name>=<value> local </value></part><part><name>MPEFFECTS</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Event Handlers </value></part><part><name>GROUP1</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Adds event handler (EH) to the given object and returns EH handle. If EH has some data to return upon event (e.g. the \"killed\" EH will return an array with 2 elements: the killed unit, and the killer), it is passed in &lt;tt&gt;_this&lt;/tt&gt; variable. Since Arma 3 v.1.63.137807 the EH handle is also stored in &lt;tt&gt;_thisEventHandler&lt;/tt&gt; variable and is available during EH code execution.&lt;br&gt;&lt;br&gt;For more information about event handlers and their types check the scripting topic [[:Category:Event Handlers|Event handlers]] in this reference. You may add as many event handlers of any type as you like to every unit. For instance, if you add an event handler of type \"killed\" and one already exists, the old one doesn't get overwritten. Use [[removeEventHandler]] to delete event handlers. \n</value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> object '''addEventHandler''' [type, command] </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name>p1</name>=<value> object: [[Object]] </value></part><part><name>PARAMETER1</name>=<value>\n\n</value></part><part><name>p2</name>=<value> [type, command]: [[Array]] </value></part><part><name>PARAMETER2</name>=<value>\n\n</value></part><part><name>p3</name>=<value> type: [[String]] - [[:Category:Event Handlers|Event Handler]] type </value></part><part><name>PARAMETER3</name>=<value>\n\n</value></part><part><name>p4</name>=<value> command: [[Code]] or [[String]] - code that should be executed once the event occurs, by default executed in [[missionNamespace]] </value></part><part><name>PARAMETER4</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Number]] - The index of the currently added event handler is returned. Indices start at 0 for each unit and increment with each added event handler.</value></part><part><name>RETRUNVALUE</name>=<value>\n____________________________________________________________________________________________\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;_EHkilledIdx <ext><name>nowiki</name><attr/><inner>=</inner><close>&lt;/nowiki&gt;</close></ext> [[player]] [[addEventHandler]] [\"killed\", {_this [[exec]] \"playerKilled.sqs\"}]&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;this [[addEventHandler]] [\"killed\", \"[[hint]] [[format]] ['Killed by %1',_this [[select]] 1]\"]&lt;/code&gt; </value></part><part><name>EXAMPLE2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name>mp</name>=<value> Some event handlers are persistent (i.e. they stay attached to a unit, even after it dies and respawns). \n\n<template lineStart=\"1\"><title>EffArg</title><part><name index=\"1\"/><value>cmd</value></part><part><name index=\"2\"/><value>arg</value></part><part><name index=\"3\"/><value>loc</value></part></template> \"Killed\" and \"Hit\" eventhandlers are executed where given unit is local. </value></part><part><name>Multiplayer</name>=<value>\n\n</value></part><part><name index=\"6\"/><value> [[:Category:Event Handlers|EventHandlers list]], [[addMPEventHandler]], [[removeEventHandler]], [[removeAllEventHandlers]] </value></part><part><name>SEEALSO</name>=<value>\n\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment><comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n[[Category:Scripting Commands|ADDEVENTHANDLER]]\n[[Category:Scripting Commands OFP 1.99|ADDEVENTHANDLER]]\n[[Category:Scripting Commands OFP 1.96|ADDEVENTHANDLER]]\n[[Category:Scripting Commands Armed Assault|ADDEVENTHANDLER]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on July 7, 2015 - 21:06 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone Kid|Killzone Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWhen using overridable EH, such as \"InventoryOpened\" and similar, where returning [[true]] allows to override default action, [[exitWith]] cannot be used to return value. So:\n&lt;code&gt;[[if]] (whatever) [[exitWith]] {[[true]]}; [[false]];&lt;/code&gt;\nForget about it, will not work. Instead use:\n&lt;code&gt;[[if]] (whatever) [[then]] {[[true]]} [[else]] {[[false]]};&lt;/code&gt;\n100% satisfaction guaranteed!\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}