{"parse":{"title":"addTorque","pageid":21688,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n</value></part><part><name index=\"1\"/><value>arma3\n</value></part><part><name index=\"2\"/><value>1.72\n</value></part><part><name>arg</name>=<value> global\n</value></part><part><name>eff</name>=<value> global\n\n</value></part><part><name>gr1</name>=<value> Object Manipulation\n</value></part><part><name index=\"3\"/><value>Applies torque (rotation momentum) to the [[getCenterOfMass | center of mass]] of the given object. Torque force is defined as vector [x, y, z] applied in world space. If you need to define torque in model space, convert the torque vector first by [[vectorModelToWorld]] or [[vectorModelToWorldVisual]] command. The torque applied as impulse. Diagram below explain which way the object would rotate.  For more information see [http://docs.nvidia.com/gameworks/content/gameworkslibrary/physx/apireference/files/classPxRigidBody.html#acb04ffc816d45afff2d04e93d7446e79 NVIDIA docs] &lt;br&gt;\n[[Image:addTorque_correct.jpg|400px]]\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Informative </value></part><part><name index=\"2\"/><value> A single application of torque would produce one impulse, which may not be enough. In this case consider applying a series of continuous impulses, for example to make a quad bike to roll forward:\n&lt;code&gt;[[onEachFrame]] { quad [[addTorque]] (quad [[vectorModelToWorld]] [100,0,0]) }&lt;/code&gt;</value></part></template>\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> important </value></part><part><name index=\"2\"/><value>This command doesn't follow convention for torque direction, which obeys right-hand rule. To comply, negate all values in the vector. </value></part></template>\n</value></part><part><name index=\"4\"/><value> object '''addTorque''' torque\n</value></part><part><name>p1</name>=<value> object: [[Object]] - PhysX object\n</value></part><part><name>p2</name>=<value> torque: [[Array]] - world vector in format [x,y,z]\n</value></part><part><name>p3</name>=<value>\n</value></part><part><name>p4</name>=<value>\n</value></part><part><name>p5</name>=<value>\n</value></part><part><name>p6</name>=<value>\n</value></part><part><name index=\"5\"/><value> [[Nothing]]\n</value></part><part><name>x1</name>=<value> Apply torque [1000,0,0] to object not factoring object positioning:\n&lt;code&gt;_wheel [[addTorque]] [1000,0,0];&lt;/code&gt;\n</value></part><part><name>x2</name>=<value> Apply torque [1000,0,0] relative to object:\n&lt;code&gt;_wheel [[addTorque]] (_wheel [[vectorModelToWorld]] [1000,0,0]);&lt;/code&gt;\n</value></part><part><name>seealso</name>=<value> [[addForce]], [[vectorModelToWorld]], [[vectorModelToWorldVisual]]\n</value></part></template>\n\n\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]</root>"}}}