{"parse":{"title":"isFlatEmpty","pageid":8294,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name index=\"1\"/><value> arma2\n\n</value></part><part><name index=\"2\"/><value>1.00\n\n</value></part><part><name>gr1</name>=<value> Positions\n\n</value></part><part><name index=\"3\"/><value> Checks given position against given filter params. Filter includes checks for:\n* If there are any objects closer than given distance from given position (in 2D)\n* If the area around position is flat enough to match given gradient\n* If the given position is over water or land\n* If the given position is over shore line\nThe gradient seems to correlate with general hill steepness: 0.1 (10%) ~6\u00b0, 0.5 (50%) ~27\u00b0, 1.0 (100%) ~45\u00b0, etc.\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Informative </value></part><part><name index=\"2\"/><value> See also [[BIS_fnc_findSafePos]].</value></part></template>\n\n</value></part><part><name>pr</name>=<value>\n* Objects accounted for proximity check seem to be static objects. Nearby vehicles and units do not seem to affect the output\n* Given position will be magically transferred into given position + [[getTerrainHeightASL]] value\n* The second element must be -1 (&amp;le; 0 really) at all times, otherwise command becomes unusable\n* The command might be a bit heavy on computations so avoid frequent and large area checks\n\n</value></part><part><name index=\"4\"/><value> position [[isFlatEmpty]] [minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]\n\n</value></part><part><name>p1</name>=<value> position: [[Array]] - position in format [[PositionAGL]]\n\n</value></part><part><name>p2</name>=<value> [minDistance, mode, maxGradient, maxGradientRadius, overLandOrWater, shoreLine, ignoreObject]: [[Array]]\n\n</value></part><part><name>p3</name>=<value>  minDistance: [[Number]] - (Optional, default -1) minimum (2D) distance from other objects (range 0..50). -1 to ignore proximity check\n\n</value></part><part><name>p4</name>=<value> mode: [[Number]] - (Optional, default -1) position check mode ('''ALWAYS USE DEFAULT VALUE''')\n\n</value></part><part><name>p5</name>=<value> maxGradient: [[Number]] - (Optional, default -1) maximum terrain steepness allowed. -1 to ignore\n\n</value></part><part><name>p6</name>=<value> maxGradientRadius: [[Number]] - (Optional, default 1) how far to extend gradient check\n\n</value></part><part><name>p7</name>=<value> overLandOrWater: [[Number]] - (Optional, default 0)\n* 0: position cannot be over water\n* 2: position cannot be over land\n* -1 to ignore\n\n</value></part><part><name>p8</name>=<value> shoreLine: [[Boolean]] - (Optional, default [[false]])\n* [[true]]: position is over shoreline (&lt; ~25 m from water)\n* [[false]] to ignore\n\n</value></part><part><name>p9</name>=<value> ignoreObject: [[Object]] - (Optional, default [[objNull]]) object to ignore in proximity checks. [[objNull]] to ignore\n\n</value></part><part><name index=\"5\"/><value> [[Array]] - Empty array [] if check failed or [[PositionASL]] if succeded. Resulting position will be original [[PositionAGL]] + [[getTerrainHeightASL]]\n\n</value></part><part><name>x1</name>=<value> Check if player position is over land:\n&lt;code&gt;_overLand = !([[position]] [[player]] [[isFlatEmpty]] [-1, -1, -1, -1, 0, [[false]]] [[isEqualTo]] []);&lt;/code&gt;\n\n</value></part><part><name>x2</name>=<value> Check if player position is over shore line:\n&lt;code&gt;_overShore = !([[position]] [[player]] [[isFlatEmpty]]  [-1, -1, -1, -1, 0, [[true]]] [[isEqualTo]] []);&lt;/code&gt;\n\n</value></part><part><name>x3</name>=<value> Check if player position is over water:\n&lt;code&gt;_overWater = !([[position]] [[player]] [[isFlatEmpty]]  [-1, -1, -1, -1, 2, [[false]]] [[isEqualTo]] []);&lt;/code&gt;\n\n</value></part><part><name>x4</name>=<value> Check if no object is closer than 5m to player position:\n&lt;code&gt;_isEmpty = !([[position]] [[player]] [[isFlatEmpty]]  [5, -1, -1, -1, -1, [[false]], [[player]]] [[isEqualTo]] []);&lt;/code&gt;\n\n</value></part><part><name>x5</name>=<value> Check if area 10m around player position is relatively flat:\n&lt;code&gt;_isFlat = !([[position]] [[player]] [[isFlatEmpty]]  [-1, -1, 0.3, 10, -1] [[isEqualTo]] []);&lt;/code&gt;\n\n</value></part><part><name>x6</name>=<value> Check if area 15m around player position is very flat and empty:\n&lt;code&gt;_isFlatEmpty = !([[position]] [[player]] [[isFlatEmpty]]  [15, -1, 0.1, 15, -1, [[false]], [[player]]] [[isEqualTo]] []);&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[BIS_fnc_findSafePos]], [[selectBestPlaces]], [[findEmptyPosition]]\n</value></part></template>\n\n&lt;dl class='command_description'&gt;\n&lt;/dl&gt;\n\n\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>tkoh</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on April 24, 2016 - 17:18 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone Kid|Killzone Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWhen this command is instructed to check if area at given position is empty it takes into account the radius of the bounding sphere of surrounding objects. Because of this, the high voltage columns such as \"Land_HighVoltageColumnWire_F\" and such objects may appear extremely large to the calculations and the position will be rejected even if visually it doesn't look too bad. To avoid this, use [[findEmptyPosition]] command first to find guaranteed empty position, then pass the result to [[isFlatEmpty]] making sure you switched off proximity check by setting 1st param to -1. For example:\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>Check if given position is flat and empty within 1m radius</value></part></template>\n[4274.66,12113,0.00139618] [[isFlatEmpty]] [1, -1, 0.1, 1, -1, [[false]], [[objNull]]]; <template><title>cc</title><part><name index=\"1\"/><value>[]</value></part></template>&lt;/code&gt;\nThe result suggests it is not flat and empty.\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>Check if given position is flat within 1m radius</value></part></template>\n[4274.66,12113,0.00139618] [[isFlatEmpty]] [-1, -1, 0.1, 1, -1, [[false]], [[objNull]]]; <template><title>cc</title><part><name index=\"1\"/><value>[4274.66,12113,48.3209]</value></part></template>&lt;/code&gt;\nThe result suggests it is.\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>Check if given position is empty within 1m radius</value></part></template>\n[4274.66,12113,0.00139618] [[isFlatEmpty]] [1, -1, -1, -1, -1, [[false]], [[objNull]]]; <template><title>cc</title><part><name index=\"1\"/><value>[]</value></part></template>&lt;/code&gt;\nThe result suggests it is not empty. But the position is in the middle of a road and there is nothing within 1m but there is \"Land_HighVoltageColumnWire_F\" not far.\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>Check if given position is empty within 1m radius ignoring nearest \"Land_HighVoltageColumnWire_F\"</value></part></template>\n[4274.66,12113,0.00139618] [[isFlatEmpty]] [1, -1, -1, 1, -1, [[false]], [[nearestObject]] [[4274.66,12113,0.00139618], \"Land_HighVoltageColumnWire_F\"]]; <template><title>cc</title><part><name index=\"1\"/><value>[4274.66,12113,48.3209]</value></part></template>&lt;/code&gt;\nThe result now suggests it is empty. So instead of relying on internal proximity check we can combine both commands:\n&lt;code&gt;fnc_isFlatEmpty =\n{\n\t[[params]] [\"_pos\", \"_params\"];\n\t_pos = _pos [[findEmptyPosition]] [0, _params [[select]] 0];\n\t[[if]] (_pos [[isEqualTo]] []) [[exitWith]] {[]};\n\t_params = +_params;\n\t_params [[set]] [0, -1];\n\t_pos = _pos [[isFlatEmpty]] _params;\n\t[[if]] (_pos [[isEqualTo]] []) [[exitWith]] {[]};\n\t_pos\n};\n\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>Test</value></part></template>\n[[4274.66,12113,0.00139618], [1, -1, 0.1, 1, -1, [[false]], [[objNull]]]] [[call]] fnc_isFlatEmpty; <template><title>cc</title><part><name index=\"1\"/><value>[4274.53,12113,48.3175]</value></part></template>\n&lt;/code&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}