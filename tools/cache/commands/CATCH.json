{"parse":{"title":"catch","pageid":2799,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name index=\"1\"/><value> arma1\n\n</value></part><part><name>gr1</name>=<value> Program Flow\n\n</value></part><part><name index=\"2\"/><value>1.00\n\n</value></part><part><name index=\"3\"/><value> Processes code when an [[Exception handling|exception]] is thrown in a [[try]] block. The exception caught can be found in the ''_exception'' variable.\n\n</value></part><part><name index=\"4\"/><value> tryBlock [[catch]] code\n\n</value></part><part><name>p1</name>=<value> tryBlock: [[Exception handling|Exception Type]]\n\n</value></part><part><name>p2</name>=<value> code: [[Code]]\n\n</value></part><part><name index=\"5\"/><value> [[Anything]]\n\n</value></part><part><name>x1</name>=<value> &lt;code&gt;[[try]] {[[throw]] \"invalid argument\"} [[catch]] {[[hint]] [[str]] _exception};&lt;/code&gt;\n\n</value></part><part><name>x2</name>=<value> <template><title>Since</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.53.133045</value></part></template>: &lt;code&gt;123 [[try]] {[[if]] (_this != 123) [[throw]] \"invalid argument\"} [[catch]] {[[hint]] [[str]] _exception};&lt;/code&gt;\n\n</value></part><part><name>x3</name>=<value> The correct usage of shorthand alt syntax: &lt;code&gt;[[try]] {\n\t[[if]] (a &gt; b) [[throw]] \"Error: some error\"; <template><title>cc</title><part><name index=\"1\"/><value>OK</value></part></template>\n\t<template><title>cc</title><part><name index=\"1\"/><value>The command argument is static</value></part></template>\n} [[catch]] {\n\t[[hint]] [[str]] _exception;\n};\n\n[[try]] {\n\t_someFunc = {\n\t\t.....\n\t};\n\t[[if]] (a &gt; b) [[throw]] ([[call]] _someFunc); <template><title>cc</title><part><name index=\"1\"/><value>NOT OK</value></part></template>\n\t<template><title>cc</title><part><name index=\"1\"/><value>The command argument is dynamic</value></part></template>\n\t<template><title>cc</title><part><name index=\"1\"/><value>_someFunc is called first to get the value regardless of (a &gt; b) outcome</value></part></template>\n} [[catch]] {\n\t[[hint]] [[str]] _exception;\n};\n\n[[try]] {\n\t_someFunc = {\n\t\t.....\n\t};\n\t[[if]] (a &gt; b) [[then]] {[[throw]] ([[call]] _someFunc)}; /// OK\n\t<template><title>cc</title><part><name index=\"1\"/><value>The command argument is dynamic</value></part></template>\n\t<template><title>cc</title><part><name index=\"1\"/><value>_someFunc is only called when (a &gt; b) is [[true]]</value></part></template>\n} [[catch]] {\n\t[[hint]] [[str]] _exception;\n};&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[Exception handling]], [[try]], [[throw]]\n</value></part></template>\n\n\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma1</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma2</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>tkoh</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template></root>"}}}