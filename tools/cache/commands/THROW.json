{"parse":{"title":"throw","pageid":2529,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> arma </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Program Flow </value></part><part><name>GROUP1</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.00</value></part><part><name>Game version</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Throws an exception. The exception is processed by first [[catch]] block. This command will terminate further execution of the code.\n\n<template lineStart=\"1\"><title>Important </title><part><name index=\"1\"/><value> Avoid using alternative shorthand syntax if you are planning on preparing your exception information dynamically, as it will have to be generated first regardless of the condition of the [[if]] statement before it, as shown in Example 3.</value></part></template> </value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name>s1</name>=<value> [[throw]] expression </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name>p1</name>=<value> expression: [[Anything]] </value></part><part><name>PARAMETER1</name>=<value>\n\n</value></part><part><name>r1</name>=<value> [[Nothing]] </value></part><part><name>RETURNVALUE</name>=<value>\n\n</value></part><part><name>s2</name>=<value> if (condition) [[throw]] exception <template><title>since</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.53.133045</value></part><part><name index=\"3\"/><value>y</value></part></template> </value></part><part><name>SYNTAX2</name>=<value>\n\n</value></part><part><name>p21</name>=<value> if (condition): [[If Type]]  - if (condition) returns [[true]], \"exception\" is thrown </value></part><part><name>PARAMETER21</name>=<value>\n</value></part><part><name>p22</name>=<value> exception: [[Anything]] - value that will be put into ''_exception'' variable inside [[catch]] block</value></part><part><name>PARAMETER22</name>=<value>\n\n</value></part><part><name>r2</name>=<value> [[Nothing]] </value></part><part><name>RETURNVALUE2</name>=<value>\n____________________________________________________________________________________________\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;[[try]] {[[throw]] \"invalid argument\"} [[catch]] {[[hint]] [[str]] _exception};&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> <template><title>since</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.53.133045</value></part></template>: &lt;code&gt;123 [[try]] {[[if]] (_this != 123) [[throw]] \"invalid argument\"} [[catch]] {[[hint]] [[str]] _exception};&lt;/code&gt; </value></part><part><name>EXAMPLE2</name>=<value>\n\n</value></part><part><name>x3</name>=<value> The correct usage of shorthand alt syntax: &lt;code&gt;[[try]] {\n\t[[if]] (a &gt; b) [[throw]] \"Error: some error\"; <template><title>cc</title><part><name index=\"1\"/><value>OK</value></part></template>\n\t<template><title>cc</title><part><name index=\"1\"/><value>The command argument is static</value></part></template>\n} [[catch]] {\n\t[[hint]] [[str]] _exception;\n};\n\n[[try]] {\n\t_someFunc = {\n\t\t.....\n\t};\n\t[[if]] (a &gt; b) [[throw]] ([[call]] _someFunc); <template><title>cc</title><part><name index=\"1\"/><value>NOT OK</value></part></template>\n\t<template><title>cc</title><part><name index=\"1\"/><value>The command argument is dynamic</value></part></template>\n\t<template><title>cc</title><part><name index=\"1\"/><value>_someFunc is called first to get the value regardless of (a &gt; b) outcome</value></part></template>\n} [[catch]] {\n\t[[hint]] [[str]] _exception;\n};\n\n[[try]] {\n\t_someFunc = {\n\t\t.....\n\t};\n\t[[if]] (a &gt; b) [[then]] {[[throw]] ([[call]] _someFunc)}; /// OK\n\t<template><title>cc</title><part><name index=\"1\"/><value>The command argument is dynamic</value></part></template>\n\t<template><title>cc</title><part><name index=\"1\"/><value>_someFunc is only called when (a &gt; b) is [[true]]</value></part></template>\n} [[catch]] {\n\t[[hint]] [[str]] _exception;\n};&lt;/code&gt; </value></part><part><name>EXAMPLE3</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name>seealso</name>=<value> [[Exception handling]], [[try]], [[catch]]\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n[[Category:Scripting Commands|THROW]]\n[[Category:Scripting Commands Armed Assault|THROW]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]</root>"}}}