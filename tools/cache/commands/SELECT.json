{"parse":{"title":"select","pageid":1721,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name index=\"1\"/><value> ofp\n\n</value></part><part><name index=\"2\"/><value>1.00\n\n</value></part><part><name>gr1</name>=<value> Arrays\n\n</value></part><part><name>gr2</name>=<value> Strings\n\n</value></part><part><name>gr3</name>=<value> Config\n\n</value></part><part><name index=\"3\"/><value> Selects an element from an array, config entry from [[Config]] or substring from a string or a range from an array. \n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Informative </value></part><part><name index=\"2\"/><value> Substring version of `select` operates with ANSI charset, if Unicode support is desired, see [[forceUnicode]] </value></part></template>\n\n</value></part><part><name index=\"4\"/><value> array  '''select''' index\n\n</value></part><part><name> p1</name>=<value> array: [[Array]]\n\n</value></part><part><name> p2</name>=<value> index: [[Number]] - Index 0 denotes the first element, 1 the second, etc. If index has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up.\n\n</value></part><part><name index=\"5\"/><value> [[Anything]] - a &lt;u&gt;reference&lt;/u&gt; to array element given by its index\n\n</value></part><part><name> s2</name>=<value> array  '''select''' boolean\n\n</value></part><part><name> p21</name>=<value> array: [[Array]]\n\n</value></part><part><name> p22</name>=<value> boolean: [[Boolean]] - [[true]] =&gt; 1, [[false]] =&gt; 0\n\n</value></part><part><name> r2</name>=<value> [[Anything]] - a &lt;u&gt;reference&lt;/u&gt; to array element given by its index (false - 0, true - 1)\n\n</value></part><part><name> s3</name>=<value> config  '''select''' index\n\n</value></part><part><name> p41</name>=<value> config: [[Config]]\n\n</value></part><part><name> p42</name>=<value> index: [[Number]] - Index 0 denotes the first element, 1 the second, etc. If index has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up.\n\n</value></part><part><name> r3</name>=<value> [[Config]]\n\n</value></part><part><name> s4</name>=<value> string '''select''' [start, length] <template><title>Since</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.27.126674</value></part><part><name index=\"3\"/><value>y</value></part></template>\n\n</value></part><part><name> p61</name>=<value> string: [[String]]\n\n</value></part><part><name> p62</name>=<value> [start, length]: [[Array]]\n\n</value></part><part><name> p63</name>=<value> start: [[Number]] - String position to start selection from. 0 denotes the first character of the string, 1 the second, etc. If passed number has decimal places it gets rounded down for fractions less than or equal .5, otherwise it gets rounded up.\n</value></part><part><name> p64</name>=<value> length (optional): [[Number]] - Number of the string characters to select. If \"length\" is omitted, selection will be made from \"start\" to the end of the string.\n\n</value></part><part><name> r4</name>=<value> [[String]]\n\n</value></part><part><name> s5</name>=<value> array '''select''' [start, count] <template><title>Since</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.31.127272</value></part><part><name index=\"3\"/><value>y</value></part></template>\n\n</value></part><part><name> p81</name>=<value> array: [[Array]]\n\n</value></part><part><name> p82</name>=<value> [start, count]: [[Array]]\n\n</value></part><part><name> p83</name>=<value> start: [[Number]] - Array index to start selection from.\n</value></part><part><name> p84</name>=<value> count: [[Number]] - Number of array elements to select. If the selected range exceeds source array boundaries, selection will be made up to the last element of the array.\n\n</value></part><part><name> r5</name>=<value> [[Array]] - a &lt;u&gt;new array&lt;/u&gt; from selection\n\n</value></part><part><name> s6</name>=<value> array '''select''' expression <template><title>Since</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.55.133771</value></part><part><name index=\"3\"/><value>y</value></part></template>\n\n</value></part><part><name> p101</name>=<value> array: [[Array]]\n\n</value></part><part><name> p102</name>=<value> expression: [[Code]] - expression that is expected to return [[Boolean]] or [[Nothing]]. If [[true]] is returned, the original array value of currently tested element [[Magic Variables#x|_x]] will be added to the output array\n\n</value></part><part><name> r6</name>=<value> [[Array]] - a &lt;u&gt;new array&lt;/u&gt; of all elements from the original array that satisfied expression condition\n\t\t  \n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;[\"a\", \"b\", \"c\", \"d\"] [[select]] 2; <template><title>cc</title><part><name index=\"1\"/><value>result is \"c\"</value></part></template>\n[[position]] [[player]] [[select]] 2; <template><title>cc</title><part><name index=\"1\"/><value>result is Z coordinate of player position</value></part></template>&lt;/code&gt;\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;[\"\", [[currentWeapon]] [[player]]] [[select]] [[alive]] [[player]]; <template><title>cc</title><part><name index=\"1\"/><value>if player is dead, \"\" is selected</value></part></template>&lt;/code&gt;\n\n</value></part><part><name>x3</name>=<value> &lt;code&gt;([[configFile]] &gt;&gt; \"cfgVehicles\" &gt;&gt; [[typeOf]] [[vehicle]] [[player]] &gt;&gt; \"Turrets\") [[select]] 0 &gt;&gt; \"gunnerAction\";&lt;/code&gt;\n\n</value></part><part><name>x4</name>=<value> &lt;code&gt;[[hint]] [[str]] (\"japa is the man!\" [[select]] [8]); <template><title>cc</title><part><name index=\"1\"/><value>the man!</value></part></template>\n[[hint]] [[str]] (\"japa is the man!\" [[select]] [0,7]); <template><title>cc</title><part><name index=\"1\"/><value>japa is</value></part></template>&lt;/code&gt;\n\n</value></part><part><name>x5</name>=<value> &lt;code&gt;[[hint]] [[str]] ([1,2,3,4,5,6] [[select]] [1,4]); <template><title>cc</title><part><name index=\"1\"/><value>[2,3,4,5]</value></part></template>&lt;/code&gt;\n\n</value></part><part><name>x6</name>=<value> &lt;code&gt;_even = [1,2,3,4,5,6,7,8,9,0] [[select]] { _x % 2 == 0 }; <template><title>cc</title><part><name index=\"1\"/><value>returns [2, 4, 6, 8, 0]</value></part></template>&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[a hash b]], [[selectRandom]], [[selectRandomWeighted]], [[set]], [[resize]], [[reverse]], [[in]], [[find]], [[findIf]], [[toArray]], [[toString]], [[forEach]], [[count]], [[deleteAt]], [[deleteRange]], [[append]], [[sort]], [[param]], [[params]], [[splitString]], [[joinString]], [[pushBack]], [[pushBackUnique]], [[apply]], [[forceUnicode]]\n</value></part></template>\n\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dd class=\"notedate\"&gt;Posted on 3 March 2009&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:General Barron|General Barron]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWhen combined with the [[count]] command, this can be used to read all entries out of a config; even when you don't know exactly how many entries there will be. See the notes under [[count]] for more info.\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on 27 Sep, 2013&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone_Kid|Killzone_Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;Rounding of fractions with [[select]] is not the same as when you use [[round]] command:\n&lt;code&gt;_roundThis = 0.5;\n[[hint]] [[str]] ([0,1] [[select]] _roundThis); <template><title>cc</title><part><name index=\"1\"/><value>0</value></part></template>\n[[hint]] [[str]] ([0,1] [[select]] [[round]] _roundThis); <template><title>cc</title><part><name index=\"1\"/><value>1</value></part></template>&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on 14 juil, 2016&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Pierre MGI|Pierre MGI]]&lt;dd class=\"note\"&gt;You can substract array from array using select:\n&lt;code&gt;_array = [[1],[2],[3]]; _sub = [2];\n_array - _sub //  [[1],[2],[3];\n_array [[select]] {!(_x [[isEqualTo]] _sub)} // [[1],[3]];\n[[1],[2],[2],[2],[2],[3]] [[select]] {!(_x [[isEqualTo]] _sub)} // [[1],[3]];\n&lt;/code&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- Note Section END --&gt;\n</comment>\n[[Category:Scripting Commands OFP 1.46|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.96|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.99|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma1</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma2</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>tkoh</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on June 22, 2015 - 23:23 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone Kid|Killzone Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nUsually when select tries to pick up element out of range, Arma throws \"division by zero\" error. However there are exceptions. Basically as long as index of element you are selecting is less then or equal to array size, you will get no error.\n&lt;code&gt;[] [[select]] 0; //ok, result is nil\n[1,2,3] [[select]] 3; //ok, result is nil\n[1,2,3] [[select]] 4; //division by zero&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on November 12, 2016 - 22:36 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Commy2|Commy2]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nIt is not safe to escape the code block of alternative syntax #5 with exitWith, breakOut etc.&lt;br&gt;\n&lt;code&gt;x3 = [1,2,3,4,5] select { \n    if (_x == 3) exitWith { \n        false; \n    }; \n    true \n};\n// could be expected to be: x3 = [1,2,4,5]\n// actual result: x3 = false\n&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on February 14, 2017 - 16:26 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Igneous01|Igneous01]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nSyntax #5 is the equivalent of passing in a predicate that returns a boolean. In SQF, a piece of code will always return what the last executed command returned.\n&lt;code&gt;myAliveUnits = allunits select {alive _x;}; // alive returns a boolean, the last statement run was alive _x, therefore this piece of code will return a true/false to the select command\nmyEastGroups = allgroups select {side _x == EAST;}; // returns all groups that are side EAST\nmy4ManGroups = allgroups select { count (units _x) == 4;}; // returns all groups that have 4 men in them\nUnitsThatDetectedMe = allunits select {_x knowsAbout player &gt; 0.1;}; // returns a list of units that have detected the player\n&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on May 28, 2017 - 13:51 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:IT07|IT07]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nVery simple example of how to report about the status of the player:\n&lt;code&gt;[ \"Player is dead.\", \"Player is alive\" ] select ( alive player )&lt;/code&gt;\nreturns \"Player is alive\" because ( alive player ) returned true. If ( alive player ) returned false, the first element (0)\n would have been returned.\nThat is a great way of reporting about something without having to write a complicated it then else statement.\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on April 14, 2018 - 13:06 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:bloodwyn1756|bloodwyn1756]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nSince 1.82 \"#\" symbol can be used to select from an array. It's shorter to write and has higher priority than math functions. \n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}