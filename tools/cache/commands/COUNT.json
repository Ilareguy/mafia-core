{"parse":{"title":"count","pageid":1692,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> ofp </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.00</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>arg</name>=<value>  </value></part><part><name>Multiplayer Arguments</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Strings </value></part><part><name>GROUP1</name>=<value>\n\n</value></part><part><name>gr2</name>=<value> Variables </value></part><part><name>GROUP2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Can be used to count:\n* the number of elements in array (doesn\u2019t actually count them per se but rather returns already known array size)\n* the number of elements in array with condition\n* the number of sub-entries in a config object\n* the number of characters in a ANSI string (since [\"Arma 3\",\"Arma3\",127,126674,\"Development\"]). If Unicode support is desired, see [[forceUnicode]].\n</value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> [[count]] array </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name> p1</name>=<value> array: [[Array]] </value></part><part><name>Parameter1</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Number]] </value></part><part><name>RETURNVALUE</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name> s2</name>=<value> condition [[count]] array </value></part><part><name>SYNTAX2</name>=<value>\n\n</value></part><part><name> p21</name>=<value> condition: [[Code]] that must return [[true]] for the tested element to be counted. The variable ''[[_x]]'' will contain the currently tested element. </value></part><part><name>PARAMETER21</name>=<value>\n\n</value></part><part><name> p22</name>=<value> array: [[Array]] </value></part><part><name>PARAMETER22</name>=<value>\n\n</value></part><part><name> r2</name>=<value> [[Number]] </value></part><part><name>RETURNVALUE2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name> s3</name>=<value> [[count]] configname </value></part><part><name>SYNTAX3</name>=<value>\n\n</value></part><part><name> p41</name>=<value> configname: [[Config]] </value></part><part><name>Parameter41</name>=<value>\n\n</value></part><part><name> r3</name>=<value> [[Number]] </value></part><part><name>RETURNVALUE3</name>=<value>\n____________________________________________________________________________________________\n\t\n</value></part><part><name> s4</name>=<value> [[count]] string </value></part><part><name>SYNTAX4</name>=<value>\n\n</value></part><part><name> p61</name>=<value> string: [[String]] </value></part><part><name>Parameter61</name>=<value>\n\n</value></part><part><name> r4</name>=<value> [[Number]] </value></part><part><name>RETURNVALUE4</name>=<value>\n\n____________________________________________________________________________________________\n\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;_cnt = [[count]] [0, 0, 1, 2]; <template><title>cc</title><part><name index=\"1\"/><value>returns 4</value></part></template>\n_cnt = [[count]] [[units]] [[group]] [[player]]; <template><title>cc</title><part><name index=\"1\"/><value>returns number of units in player group</value></part></template>&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;_cnt = {[[_x]] == 4} [[count]] [1, 9, 8, 3, 4, 4, 4, 5, 6]; <template><title>cc</title><part><name index=\"1\"/><value>returns 3</value></part></template>\n_cnt = {[[alive]] [[_x]]} [[count]] [[allUnits]]; <template><title>cc</title><part><name index=\"1\"/><value>returns the number of alive units</value></part></template>&lt;/code&gt; </value></part><part><name>EXAMPLE2</name>=<value>\n\n</value></part><part><name>x3</name>=<value> &lt;code&gt;_cnt = [[count]] ([[configFile]] [[config greater greater name|&gt;&gt;]] \"CfgVehicles\");&lt;/code&gt; </value></part><part><name>EXAMPLE3</name>=<value>\n\n</value></part><part><name>x4</name>=<value> &lt;code&gt;[[hint]] [[str]] [[count]] \"japa is the man!\"; <template><title>cc</title><part><name index=\"1\"/><value>16</value></part></template>&lt;/code&gt; </value></part><part><name>EXAMPLE4</name>=<value>\n\n________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[set]], [[resize]], [[pushBack]], [[pushBackUnique]], [[apply]], [[select]], [[reverse]], [[select]], [[in]], [[find]], [[toArray]], [[toString]], [[forEach]], [[deleteAt]], [[deleteRange]], [[append]], [[sort]], [[param]], [[params]], [[arrayIntersect]], [[countFriendly]], [[countEnemy]], [[countUnknown]], [[countSide]], [[countType]], [[splitString]], [[joinString]], [[findIf]], [[forceUnicode]]</value></part><part><name>SEEALSO</name>=<value>\n\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dd class=\"notedate\"&gt;Posted on April 28, 2007 - 13:49\n&lt;dt class=\"note\"&gt;[[User:Kronzky|Kronzky]]\n&lt;dd class=\"note\"&gt;\nThis conditional count command ''only'' works if all the elements in the tested array are of the same [[Data Types|type]] as the tested element.&lt;br&gt;\nFor example, the following code will created an error, since the elements are of different types (object, number, string):\n&lt;code&gt;_arr = [<ext><name>nowiki</name><attr/></ext>[[player]],100,\"one\"]; {_x == \"one\"} [[count]] _arr;&lt;/code&gt; \n::Alternatively, to avoid the error use [[isEqualTo]] instead of ==. --KK&lt;br&gt;\nThis one, on the other hand, where all elements are strings, just like the tested element, will return the correct result of 1:\n&lt;code&gt;_arr = [\"one\",\"two\",\"three\"]; {_x == \"one\"} [[count]] _arr;&lt;/code&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on August 3, 2006 - 14:27\n&lt;dt class=\"note\"&gt;[[User:Hardrock|hardrock]]\n&lt;dd class=\"note\"&gt;''Notes from before the conversion:''&lt;br&gt;\nUse this to calculate how many \"M16\" mags a soldier has left. \n&lt;code&gt;{ _x == \"M16\" } [[count]] [[magazines]] soldier1;&lt;/code&gt;\nTake care when using count to determine how many units are left alive in a group: count units [[group]] [[player]] or count units groupname Will return the number of units the leader of the group thinks are alive. If some units have been killed out of sight of other members of the group then it may take sometime for this to be the actual numbers in the group. To determine exactly how many units are really alive in a group use: \n&lt;code&gt;{ [[alive]] _x } [[count]] [[units]] [[group]] [[player]];&lt;/code&gt;\nor\n&lt;code&gt;{ [[alive]] _x } [[count]] [[units]] groupname;&lt;/code&gt;\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n\n\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.46|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.96|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.99|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Armed Assault|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on December 15, 2014 - 00:01 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Heeeere's Johnny!|Heeeere's Johnny!]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n''count'' can be (ab)used for a very fast and simple check if at least one element in an array fulfills a certain condition:\n&lt;code&gt;[[if]] ({ [[if]] ('''_x fulfills condition''') exitWith {1}; false } [[count]] _array [[isEqualTo]] 1) [[then]]\n{\n\t<template><title>cc</title><part><name index=\"1\"/><value>do whatever here</value></part></template>\n};&lt;/code&gt;\nThis code will exit the ''count'' loop as soon as it finds an element fulfilling the condition, leaving the ''count'' with the value of 1, hence make the larger if-condition be ''true''.&lt;br&gt;\nIf no array element fulfills the condition, the ''count'' will be 0 and the if-condition will be ''false''.\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on December 29, 2014 - 21:23 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone Kid|Killzone Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nQuit loop at first fulfilled condition (same as above but faster):\n&lt;code&gt;{[[if]] (_x == 4) [[exitWith]] {\n\t<template><title>cc</title><part><name index=\"1\"/><value>do something when we reach 4</value></part></template>\n<ext><name>nowiki</name><attr/><inner>}}</inner><close>&lt;/nowiki&gt;</close></ext> [[count]] [1,2,3,4,5,6];&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on January 2, 2015 - 22:32 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Heeeere's Johnny!|Heeeere's Johnny!]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n\nUsing [[exitWith]] inside a '''count''' loop will overwrite the default functionality and make '''count''' return whatever the '''exitWith''' returns:\n&lt;code&gt;_result = {\n    if (_x [[isEqualTo]] 3) [[exitWith]] { \"Hello\" }\n} [[count]] [1,2,3,4,5];\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>_result <template><title>=</title></template> \"Hello\"</value></part></template>&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on August 22, 2016 - 19:41 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Ebay|Ebay]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWith the alternative syntax each iteration should result in an interior return of bool or nothing. Example:\n&lt;code&gt;[[createDialog]] \"RscFunctionsViewer\";\n{ [[lbAdd]] [292901, _x]; } [[count]] [\"first\", \"second\", \"third\"];&lt;/code&gt;\n[[lbAdd]] returns a number, so this throws \"Error Type Number, expected Bool\". Tested in A2OA 1.63.131129\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}