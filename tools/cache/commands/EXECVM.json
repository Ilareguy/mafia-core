{"parse":{"title":"execVM","pageid":2732,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name index=\"1\"/><value> arma1\n\n</value></part><part><name>gr1</name>=<value> Program Flow\n\n</value></part><part><name index=\"2\"/><value>1.00\n\n</value></part><part><name index=\"3\"/><value> Compiles and adds [[SQF_syntax|SQF]] [[Script]] to the [[Scheduler|scheduler]] queue and returns script handle. The script is first searched for in the mission folder, then in the campaign scripts folder and finally in the global scripts folder. The script does not execute immediately upon running [[execVM]] command, but with some delay. How much delay is unknown as it largely depends on how many other scripts there are in the queue and how busy is VM. The optional argument is passed to the script in [[private]] variable &lt;tt&gt;_this&lt;/tt&gt;. In Arma 3 the script handle is also passed to the script in &lt;tt&gt;_thisScript&lt;/tt&gt; variable.\n&lt;br&gt;&lt;br&gt;In order to understand [[execVM]] consider the following comparison:\n&lt;code&gt;[[private]] _handle <template><title>=</title></template> _args [[execVM]] \"someFile.sqf\";\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>is practically identical to</value></part></template>\n[[private]] _handle <template><title>=</title></template> _args [[spawn]] [[compile]] [[preprocessFileLineNumbers]] \"someFile.sqf\";&lt;/code&gt;\nSo if you need multiple execution of the same file, you might want to store it in a function ([[Functions_Library_(Arma_3)|Functions Library]]), otherwise, for a single execution, [[execVM]] is a good choice.&lt;br&gt;&lt;br&gt;\n\nTo see what VM scripts are currently in the scheduler, use [[diag_activeSQFScripts]] command.&lt;br&gt;&lt;br&gt;\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Warning </value></part><part><name index=\"2\"/><value> If the file you are executing is not prepared using UTF-8 encoding and contains some characters [[toArray | with codes]] &gt; 127, they might convert incorrectly</value></part></template>\n\n</value></part><part><name index=\"4\"/><value> arguments [[execVM]] filename\n\n</value></part><part><name>p1</name>=<value> arguments: [[Anything]] - arguments accessible as &lt;tt&gt;[[Magic Variables#this|_this]]&lt;/tt&gt; in the script\n\n</value></part><part><name>p2</name>=<value> filename: [[String]] - file with sqf code (doesn't have to have .sqf extension, but not using standard extensions may cause problems later during binarisation)\n\n</value></part><part><name index=\"5\"/><value> [[Script]] - script handle, can be used to determine (via [[scriptDone]] (also via [[isNull]] in Arma 3)) when the execVMed script has finished. In Arma 3, the handle is also available inside the execVMed script in &lt;tt&gt;_thisScript&lt;/tt&gt; variable.\n\n</value></part><part><name>s2</name>=<value> [[execVM]] filename\n\n</value></part><part><name>p21</name>=<value> filename: [[String]] - file with sqf code (doesn't have to have .sqf extension, but not using standard extensions may cause problems later, during binarisation)\n\n</value></part><part><name>r2</name>=<value> [[Script]] - script handle, can be used to determine (via [[scriptDone]] (also via [[isNull]] in Arma 3)) when the execVMed script has finished. In Arma 3, the handle is also available inside the execVMed script in &lt;tt&gt;_thisScript&lt;/tt&gt; variable.\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;_handle = [[execVM]] \"test.sqf\";&lt;/code&gt;\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;_handle = [[player]] [[execVM]] \"test.sqf\";\n[[waitUntil]] { [[scriptDone]] _handle };&lt;/code&gt;\n\n</value></part><part><name>x3</name>=<value> In Arma 3 this is also possible:\n&lt;code&gt;_handle = [[execVM]] \"123.sqf\"; \n[[waitUntil]] { [[isNull]] _handle };&lt;/code&gt;\n\n</value></part><part><name>x4</name>=<value> &lt;code&gt;[4] [[execVM]] \"showDamage.sqf\";\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>showDamage.sqf</value></part></template>\n[[private]] _damage = _this [[select]] 0;\n[[hint]] [[format]] [\"%1\", _damage];&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[call]], [[spawn]], [[exec]], [[execFSM]], [[scriptDone]], [[scriptNull]], [[terminate]], [[sleep]], [[uiSleep]], [[waitUntil]], [[canSuspend]], [[diag_activeScripts]], [[diag_activeSQFScripts]], [[SQF syntax]], [[Control Structures]]\n</value></part></template>\n\n\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>\n&lt;dd class=\"notedate\"&gt;Posted on November 23, 2010 - 15:56&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Kabilen|Kabilen]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;Passing variables to the script file''\n\nTo pass multiple variables to the script file, use an array e.g:\n\n'''null = [myunit,1234] execVM \"test.sqf\";'''\n\nNow within test.sqf to access the elements, use the following:\n\n'''_myunit = _this select 0;'''&lt;br&gt;\n'''_myvar = _this select 1;'''\n\n\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma1</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma2</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>tkoh</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template></root>"}}}