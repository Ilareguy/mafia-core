{"parse":{"title":"drawIcon3D","pageid":12288,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name>game1</name>=<value> arma3\n\n</value></part><part><name>version1</name>=<value> 0.50\n\n</value></part><part><name>gr1</name>=<value> Interaction\n\n</value></part><part><name>descr</name>=<value> Draws an ingame icon at a given position. Command has to be executed each frame. Use [[addMissionEventHandler]] \"Draw3D\" which is executed each frame and if user can see the drawing. In order for the results of this command to be visible through a [[camCreate | custom camera]], enable HUD with [[cameraEffectEnableHUD]]. [[showHUD]] [[false]] will hide icon drawing. In order for arrows to appear, the icon texture should exist. The arrows size is proportionate to icon size.\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Informative </value></part><part><name index=\"2\"/><value> The values passed for the icon width and height are multipliers for \"activeWidth\" and \"activeHeight\" set in config. So for example, if one needs to create an icon half screen wide ([[safeZoneW]] / 2) and half screen tall ([[safeZoneH]] / 2), divide these by config values respectfully: \n&lt;code&gt;_iconWidth <template><title>=</title></template> ([[safeZoneW]] / 2) / [[getNumber]] ([[configFile]] &gt;&gt; \"CfgInGameUI\" &gt;&gt; \"Cursor\" &gt;&gt; \"activeWidth\");&lt;/code&gt;\n&lt;code&gt;_iconHeight <template><title>=</title></template> ([[safeZoneH]] / 2) / [[getNumber]] ([[configFile]] &gt;&gt; \"CfgInGameUI\" &gt;&gt; \"Cursor\" &gt;&gt; \"activeHeight\");&lt;/code&gt;</value></part></template>\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Informative </value></part><part><name index=\"2\"/><value> The visibility of the icon could be affected when some of the HUD properties are hidden. For more information see [[showHUD]] page.</value></part></template>\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Informative </value></part><part><name index=\"2\"/><value> Since Arma 3 v2.03.147270 it is possible to further adjust horizontal and vertical position of the text with 'offsetX' and 'offsetY' params.&lt;br&gt;\nSince Arma 3 v2.03.147275 icon and text color could be defined separately in [[r,g,b,a],[r,g,b,a]] format</value></part></template>\n\n</value></part><part><name>s1</name>=<value> '''drawIcon3D''' [texture, color, position, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows, offsetX, offsetY]\n\n</value></part><part><name>p1</name>=<value> [texture, color, position, width, height, angle, text, shadow, textSize, font, textAlign, drawSideArrows, offsetX, offsetY]: [[Array]]\n\n</value></part><part><name>p2</name>=<value> texture: [[String]] - icon image\n\n</value></part><part><name>p3</name>=<value> color: [[Array]] - icon color in [r,g,b,a] format or (Since Arma 3 v2.03.147275) icon and text color in [[r,g,b,a],[r,g,b,a]] format\n\n</value></part><part><name>p4</name>=<value> position: [[Array]] - icon world position in [[PositionAGL]] format\n\n</value></part><part><name>p5</name>=<value> width: [[Number]] - icon width (see description note)\n\n</value></part><part><name>p6</name>=<value> height: [[Number]] - icon height (see description note)\n\n</value></part><part><name>p7</name>=<value> angle: [[Number]] - icon rotation angle\n\n</value></part><part><name>p8</name>=<value> text (Optional, default: \"\"): [[String]] - text label to display next to icon.\n\n</value></part><part><name>p9</name>=<value> shadow (Optional, default: 0): [[Number]] or [[Boolean]]\n* 0 = none\n* 1 = shadow (not used in this context, used in UI context)\n* 2 = outline\n* [[true]] - outline\n* [[false]] - none.\n\n</value></part><part><name>p10</name>=<value> textSize (Optional, default: size of system): [[Number]] - the size of the text.\n\n</value></part><part><name>p11</name>=<value> font (Optional, default: \"RobotoCondensed\"): [[String]] - font class name from CfgFontFamilies.\n\n</value></part><part><name>p12</name>=<value> textAlign (Optional, default: \"center\"): [[String]] - \"left\", \"center\", \"right\".\n\n</value></part><part><name>p13</name>=<value> drawSideArrows (Optional, default: [[false]]): [[Boolean]] - [[true]] to draw arrows and the text label at edge of screen when icon moves off screen.\n\n</value></part><part><name>p14</name>=<value> offsetX (Optional, default: 0): [[Number]] - (Since Arma 3 v2.03.147270) - x offset for the icon text.\n\n</value></part><part><name>p15</name>=<value> offsetY (Optional, default: 0): [[Number]] - (Since Arma 3 v2.03.147270) - y offset for the icon text.\n\n</value></part><part><name>r1</name>=<value> [[Nothing]]\n\n</value></part><part><name>x1</name>=<value> Icon and text:&lt;code&gt;[[addMissionEventHandler]] [\"Draw3D\", {\n\t[[drawIcon3D]] [\"targetIcon.paa\", [1,1,1,1], [[ASLToAGL]] [[getPosASL]] [[cursorTarget]], 1, 1, 45, \"Target\", 1, 0.05, \"TahomaB\"];\n}];&lt;/code&gt;\n\n</value></part><part><name>x2</name>=<value> Just text:\n&lt;code&gt;[[addMissionEventHandler]] [\"Draw3D\", {\n\t[[drawIcon3D]] [\"\", [1,0,0,1], [[ASLToAGL]] [[getPosASL]] [[cursorTarget]], 0, 0, 0, \"Target\", 1, 0.05, \"PuristaMedium\"];\n}];&lt;/code&gt;\n\n</value></part><part><name>x3</name>=<value>&lt;code&gt;iconPos = [[player]] [[getPos]] [10, 0] [[vectorAdd]] [0,0,2];\n[[addMissionEventHandler]] [\"draw3D\", \n{\n\t[[drawIcon3D]] \n\t[\n\t\t\"\\a3\\ui_f\\data\\IGUI\\Cfg\\Radar\\radar_ca.paa\",\n\t\t[0,0,1,1],\n\t\ticonPos,\n\t\t5,\n\t\t5,\n\t\t[[getDirVisual]] [[player]],\n\t\t\"COMPASS\",\n\t\t0,\n\t\t0.3,\n\t\t\"PuristaMedium\",\n\t\t\"center\",\n\t\t[[true]]\n\t];\n}];&lt;/code&gt;\n\n</value></part><part><name>x4</name>=<value>Since Arma 3 v 2.03.147270&lt;code&gt;pos = [[player]] [[getPos]] [10, 0] [[vectorAdd]] [0,0,2];\n[[addMissionEventHandler]] [\"draw3D\", \n{\n\t_k = 10 / ([[player]] [[distance]] pos);\n\t[[drawIcon3D]] \n\t[\n\t\t\"\\a3\\ui_f\\data\\IGUI\\Cfg\\Radar\\radar_ca.paa\", \n        [1,0,0,1], \n        pos,\n        1 * _k, \n\t\t1 * _k, \n        0, \n        [[name]] [[player]], \n        0, \n        0.04 * _k, \n        \"RobotoCondensed\",\n\t\t\"right\", \n\t\t[[true]], \n\t\t0.005 * _k,  \n\t\t-0.035 * _k\n\t]; \n}];&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[drawLine3D]], [[getMissionPath]], [[showHUD]], [[cameraEffectEnableHUD]]\n</value></part></template>\n\n\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on August 31, 2013&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone_Kid|Killzone_Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;As command syntax indicates, this command expects icon position in format [[PositionAGL]] meaning that over the land it expects [[PositionATL]] and over the sea [[PositionASLW]]. &lt;br&gt;&lt;br&gt;\n\nThis command works well with addon textures, however getting it to display mission textures is a bit tricky. Follow [http://killzonekid.com/arma-scripting-tutorials-mission-root/ this guide].\n&lt;/dd&gt;\n&lt;/dl&gt;\n\n&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on April 19, 2014&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:AgentRevolution|AgentRev]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;You should rely exclusively on [[modelToWorldVisual]] for a moving object's icon position if you want it to accurately stay at the correct height over the sea. It computes faster than [[ASLtoAGL]].&lt;br&gt;&lt;br&gt;\n\nWidth, height, and textSize are proportional to the user's interface size, which can optionally be compensated against via &lt;tt&gt;size / ([[getResolution]] select 5)&lt;/tt&gt;&lt;br&gt;&lt;br&gt;\n\nAdditionally, width and height are inversely proportional to the &lt;tt&gt;fovLeft&lt;/tt&gt; and &lt;tt&gt;fovTop&lt;/tt&gt; parameters from the user's [[Profile|ArmaProfile]], and AFAIK those parameters are not retrievable via scripting. For example, a &lt;tt&gt;fovTop&lt;/tt&gt; higher than the default value of 0.75 will make all 3D icons smaller vertically. I'm not sure if this is a bug or by design, however it is definitely annoying to take into account.\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on October 23, 2014 - 02:42 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:DreadedEntity|DreadedEntity]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n[[drawIcon3D]] and [[BIS_fnc_addStackedEventHandler]] work well together.&lt;br&gt;&lt;br&gt;\n\nUsing formatting commands with [[drawIcon3D]] will not work, instead, they will be added to the string.&lt;br&gt;\n&lt;code&gt;[\"uniqueID\", \"onEachFrame\", \n{\n\tdrawIcon3D[\"myIcon.jpg\", [1,1,1,0.5], getPos player, 1, 1, 0, format[\"%1\\n%2\", \"Dreaded\", \"Entity\"]];\n}] call BIS_fnc_addStackedEventHandler;&lt;/code&gt;\nShown text will be '''Dreaded\\nEntity'''. '''(A3 1.32.127785)'''&lt;br&gt;&lt;br&gt;\n\nThe \"text\" parameter must be a string. You cannot use [[Structured_Text]].&lt;br&gt;\n&lt;code&gt;[\"uniqueID\", \"onEachFrame\", \n{\n\tdrawIcon3D\n\t[\n\t\t\"myIcon.jpg\",\n\t\t[1,1,1,0.5],\n\t\tgetPos player,\n\t\t1,\n\t\t1,\n\t\t0,\n\t\tparseText format[\"&lt;t size='1.25' font='PuristaLight' color='#ff0000'&gt;%1%2&lt;/t&gt;\", Dreaded, Entity]\n\t];\n}] call BIS_fnc_addStackedEventHandler;&lt;/code&gt;\n'''(A3 1.32.127785)'''\n&lt;/dd&gt;\n&lt;/dl&gt;\n\n&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on November 13 (2014)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Iceman77|Iceman77]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nHere's a practical example combining both drawLine3D and drawIcon3D. Note: You may want to use visiblePosition instead of getPos for moving objects.   \n&lt;code&gt;DEADPILOTS = [];\n{\n    if (getText (configfile &gt;&gt; \"CfgVehicles\" &gt;&gt; typeOf _x &gt;&gt; \"textSingular\") == \"pilot\") then {\n\tDEADPILOTS pushBack _x;\n    };\n} forEach allDeadMen;\n\naddMissionEventHandler [\"Draw3D\", { \t\n    if (\n\t{\n\t    player distance _x &lt;= 15\n\t} count DEADPILOTS &gt; 0\n       ) then {\n        {\n\t    _corpsePos = getPos _x;\n\t    if (player distance _corpsePos &lt;= 15) then {\n\t\t_line1_start = _corpsePos;\n\t\t_line1_end = [(_line1_start select 0), (_line1_start select 1), 0.5];\n\t\t_line2_start = [(_line1_end select 0), (_line1_end select 1) + 0.5, (_line1_end select 2)];\t\t\t\t\n\t\tdrawLine3D [_line1_start, _line1_end, [0,0,0,0.5]];\n\t\tdrawLine3D [_line1_end, _line2_start, [0,0,0,0.5]];\t\t\n\t\tdrawIcon3D [\"\\a3\\ui_f\\data\\gui\\cfg\\hints\\BasicLook_ca.paa\", [0,0,0,0.5], _line2_start, 0.75, 0.75, 0];\n\t    };\n\t} forEach DEADPILOTS;\n    };\n}];\n&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on February 11, 2016 - 07:37 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Ranwer|Ranwer]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;You can also use [[getPosWorld]] (for X and Y only, but not Z), which works splendid in script performance. Here is an example:&lt;br&gt;\n&lt;code&gt;addMissionEventHandler [\"Draw3D\", {\t&lt;br&gt;\t_pos = getPosWorld player;&lt;br&gt;\tdrawIcon3D [\"a3\\ui_f\\data\\gui\\Rsc\\RscDisplayArsenal\\radio_ca.paa\", [1,1,1,1], [(_pos select 0),(_pos select 1), 1], 0.8, 0.8, 0, (name player), 1, 0.0315, \"EtelkaMonospacePro\"];&lt;br&gt;}];&lt;/code&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}