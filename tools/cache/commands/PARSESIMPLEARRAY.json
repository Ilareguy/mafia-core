{"parse":{"title":"parseSimpleArray","pageid":18506,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name index=\"1\"/><value> arma3\n\n</value></part><part><name index=\"2\"/><value>1.68\n\n</value></part><part><name>gr1</name>=<value> Strings\n\n</value></part><part><name>gr2</name>=<value> Arrays\n\n</value></part><part><name index=\"3\"/><value> Converts given, formatted as simple array, [[String]] into a valid [[Array]]. Simple array is array consisting of [[Number]]s, [[String]]s, [[Boolean]]s and [[Array]]s of all of the above. For example: &lt;tt&gt;[1,\"2\",true,[4,\"five\",false]]&lt;/tt&gt;. The string representation of this array compatible with [[parseSimpleArray]] will be &lt;tt&gt;\"[1,\"\"2\"\",true,[4,\"\"five\"\",false]]\"&lt;/tt&gt; accordingly. This command is almost '''4x faster''' than similar uncached [[call]] [[compile]] method. And because [[call]] [[compile]] is not required, it is also '''more secure''' and primarily intended for use with [[callExtension]] to parse the [[String]] output into [[Array]]. Since Arma 3 v.1.95.145925 the command will tolerate extra spaces and supports single quotes. The only recognised keywords (case '''in'''sensitive) are:\n* &lt;tt&gt;true&lt;/tt&gt; - translates into [[true]]\n* &lt;tt&gt;false&lt;/tt&gt; - translates into [[false]]\n* &lt;tt&gt;nil&lt;/tt&gt; - translates into [[nil]]\n* &lt;tt&gt;null&lt;/tt&gt; - translates into [[nil]]\n* &lt;tt&gt;&amp;lt;null&amp;gt;&lt;/tt&gt; - translates into [[nil]]\n* &lt;tt&gt;any&lt;/tt&gt; - translates into [[nil]]\n\n</value></part><part><name index=\"4\"/><value> '''parseSimpleArray''' stringArray\n\n</value></part><part><name>p1</name>=<value> stringArray: [[String]] - string formatted as simple array\n\n</value></part><part><name index=\"5\"/><value> [[Array]] - valid array\n\n</value></part><part><name>x1</name>=<value>&lt;code&gt;_arr = [[parseSimpleArray]] \"[1,2,3]\";&lt;/code&gt;</value></part><part><name/>=<value>\t  \n</value></part><part><name>x2</name>=<value> &lt;code&gt;_bool = [[true]];\n_num = 123.45;\n_str = \"ok\";\n_arr = [1,false,\"cool\"];\n_res = [[parseSimpleArray]] [[format]] [\"[%1,%2,%3,%4]\", _bool, _num, [[str]] _str, [[str]] _arr]; \n// Note how _bool and _num do not need [[str]], however if used anyway, the result in this case would be identical\n[[hint]] [[str]] _res; // [true,123.45,\"ok\",[1,false,\"cool\"]]&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[set]], [[resize]], [[pushBack]], [[pushBackUnique]], [[select]], [[apply]], [[reverse]], [[count]], [[find]], [[in]], [[forEach]], [[deleteAt]], [[deleteRange]], [[append]], [[sort]], [[arrayIntersect]], [[callExtension]]\n</value></part></template>\n\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}