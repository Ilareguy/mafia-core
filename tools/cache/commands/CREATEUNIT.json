{"parse":{"title":"createUnit","pageid":1700,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> ofp </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.34</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>eff</name>=<value> global </value></part><part><name>Effects in MP</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Object Manipulation </value></part><part><name>GROUP1</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Create a unit of class that is defined in [[:Category:CfgVehicles|CfgVehicles]].\n<template lineStart=\"1\"><title>Important </title><part><name index=\"1\"/><value> &lt;div style<template><title>=</title></template>\"float: left; margin-right: 0.5em;\"&gt;<template><title>GVI</title><part><name index=\"1\"/><value>ofp</value></part><part><name index=\"2\"/><value>1.34</value></part></template> <template><title>GVI</title><part><name index=\"1\"/><value>arma</value></part><part><name index=\"2\"/><value>1.00</value></part></template>&lt;/div&gt;\nThis command could be bugged in <template><title>ofp</title></template> or <template><title>arma</title></template> ; an additional [[join]] may solve the problem.&lt;br&gt;\nHowever, some commands such as [[setUnitPos]] only work if run before the [[join]].</value></part></template>\n<template lineStart=\"1\"><title>Warning </title><part><name index=\"1\"/><value> The unit will not be created if the passed group does not exist (a.k.a [[grpNull]]); this can happen if [[createGroup]] fails because the '''group limit has been reached''' (see [[createGroup]] for respective game limits).</value></part></template> </value></part><part><name>Description</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value>group [[createUnit]] [type, position, markers, placement, special] </value></part><part><name>Syntax</name>=<value>\n\n</value></part><part><name>p1</name>=<value> group: [[Group]] - Existing group new unit will join </value></part><part><name>Parameter 1</name>=<value>\n</value></part><part><name>p2</name>=<value> [type, position, markers, placement, special]: [[Array]] </value></part><part><name>Parameter 2</name>=<value>\n</value></part><part><name>p3</name>=<value> type: [[String]] - Class name of unit to be created as per [[CfgVehicles]] </value></part><part><name>Parameter 3</name>=<value>\n</value></part><part><name>p4</name>=<value> position: [[Position]], [[Position2D]], [[Object]] or [[Group]] - Location unit is created at. In case of [[Group]] position of the [[group]] [[leader]] is used </value></part><part><name>Parameter 4</name>=<value>\n</value></part><part><name>p5</name>=<value> markers: [[Array]] - Placement markers </value></part><part><name>Parameter 5</name>=<value>\n</value></part><part><name>p6</name>=<value> placement: [[Number]] - Placement radius </value></part><part><name>Parameter 6</name>=<value>\n</value></part><part><name>p7</name>=<value> special: [[String]] - Unit placement special, one of:\n* &lt;tt&gt;\"NONE\"&lt;/tt&gt; - The unit will be created at the first available free position nearest to given position\n* &lt;tt&gt;\"FORM\"&lt;/tt&gt; - Not implemented, currently functions the same as \"NONE\".\n* &lt;tt&gt;\"CAN_COLLIDE\"&lt;/tt&gt; - The unit will be created exactly at passed position\n* &lt;tt&gt;\"CARGO\"&lt;/tt&gt; - The unit will be created in cargo of the group's vehicle, regardless of the passed position (see Example 5). If group has no vehicle or there is no cargo space available, the unit will be placed according to &lt;tt&gt;\"NONE\"&lt;/tt&gt;. To check available cargo space use:&lt;code&gt;_hasCargo = _veh [[emptyPositions]] \"CARGO\" &gt; 0;&lt;/code&gt; </value></part><part><name>Parameter 7</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Object]] - The created unit </value></part><part><name>Return value</name>=<value>\n\n</value></part><part><name>s2</name>=<value> type [[createUnit]] [position, group, init, skill, rank] </value></part><part><name>Syntax2</name>=<value>\n\n</value></part><part><name>p21</name>=<value> type: [[String]] - Class name of unit to be created as per [[CfgVehicles]] </value></part><part><name>Parameter 21</name>=<value>\n</value></part><part><name>p22</name>=<value> [position, group, init, skill, rank]: [[Array]] </value></part><part><name>Parameter 22</name>=<value>\n</value></part><part><name>p23</name>=<value> position: [[Position]], [[Position2D]], [[Object]] or [[Group]] - Location unit is created at. In case of [[Group]] position of the [[group]] [[leader]] is used </value></part><part><name>Parameter 23</name>=<value>\n</value></part><part><name>p24</name>=<value> group: [[Group]] - Existing group new unit will join </value></part><part><name>Parameter 24</name>=<value>\n</value></part><part><name>p25</name>=<value> init: [[String]] - (Optional, default \"\") Unit init statement, similar to unit init field in the editor. The code placed in unit init will run upon unit creation for every client on network, present and future. The code itself receives the reference to the created unit via local variable [[this]]. Avoid using global commands in unit init statement as it already runs on every client. </value></part><part><name>Parameter 25</name>=<value>\n</value></part><part><name>p26</name>=<value> skill: [[Number]] - (Optional, default 0.5) Unit [[skill]] </value></part><part><name>Parameter 26</name>=<value>\n</value></part><part><name>p27</name>=<value> rank: [[String]] - (Optional, default \"PRIVATE\") Unit [[rank]] </value></part><part><name>Parameter 27</name>=<value>\n\n</value></part><part><name>r2</name>=<value> <template><title>Warning</title><part><name index=\"1\"/><value>'''[[Nothing]]''' - This syntax does NOT return a unit reference! In order to reference this unit, you can use <template><title>Inline code</title><part><name index=\"1\"/><value>newUnit <template><title>=</title></template> this</value></part></template> in the ''init'' field.&lt;br&gt;\nIf the target group is not local, the init script will only execute after a slight delay; see [[User:Killzone_Kid|Killzone_Kid]]'s note below for more information and issues about this syntax.</value></part></template> </value></part><part><name>Return value 2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name>x1</name>=<value> &lt;code&gt;_unit = [[group]] [[player]] [[createUnit]] [\"B_RangeMaster_F\", [[position]] [[player]], [], 0, \"FORM\"];&lt;/code&gt;</value></part><part><name>Example 1</name>=<value>\n</value></part><part><name>x2</name>=<value> &lt;code&gt;\"B_RangeMaster_F\" [[createUnit]] [<ext><name>nowiki</name><attr/></ext>[[position]] [[player]], [[group]] [[player]]];&lt;/code&gt; </value></part><part><name>Example 2</name>=<value>\n</value></part><part><name>x3</name>=<value> &lt;code&gt;\"B_RangeMaster_F\" [[createUnit]] [<ext><name>nowiki</name><attr/></ext>[[getMarkerPos]] \"barracks\", _groupAlpha];&lt;/code&gt; </value></part><part><name>Example 3</name>=<value>\n</value></part><part><name>x4</name>=<value> &lt;code&gt;\"B_RangeMaster_F\" [[createUnit]] [\n\t[[getMarkerPos]] \"marker_1\",\n\t_groupAlpha,\n\t\"loon1 = [[this]]; [[this]] [[addWeapon]] 'BAF_L85A2_RIS_SUSAT'\",\n\t0.6,\n\t\"corporal\"\n];&lt;/code&gt; </value></part><part><name>Example 4</name>=<value>\n\n</value></part><part><name>x5</name>=<value> &lt;code&gt;_veh = \"O_Quadbike_01_F\" [[createVehicle]] ([[player]] [[getRelPos]] [10, 0]);\n_grp = [[createVehicleCrew]] _veh;\n_unit = _grp [[createUnit]] [<ext><name>nowiki</name><attr/></ext>[[typeOf]] [[driver]] _veh, _grp, [], 0, \"CARGO\"];&lt;/code&gt;</value></part><part><name>Example 5</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[createCenter]], [[createGroup]], [[createVehicle]], [[setVehiclePosition]], [[create3DENEntity]] </value></part><part><name>See also</name>=<value>\n</value></part></template>\n\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.46|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.96|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.99|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Armed Assault|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dd class=\"notedate\"&gt;Posted on 27th Nov 2016\n&lt;dt class=\"note\"&gt;[[User:Ffur2007slx2_5|Ffur2007slx2_5]]\n&lt;dd class=\"note\"&gt;\n<template lineStart=\"1\"><title>GVI</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.64</value></part></template> The side of the created unit by this command uses its config's side and not the side of a passed empty group created by [[createGroup]]:\n&lt;code&gt;_grp = [[createGroup]] [[east]];\n[[hint]] [[str]] [[side]] _grp; <template><title>codecomment</title><part><name index=\"1\"/><value>// EAST</value></part></template>\n_ap = _grp [[createUnit]] [ \"C_man_p_beggar_F\", [[position]] [[player]], [], 0, \"FORM\"];\n[[hint]] [[str]] [[side]] _ap; <template><title>codecomment</title><part><name index=\"1\"/><value>// CIV, not EAST</value></part></template>&lt;/code&gt;\nWe can use [[join]] command or fill the _grp with entities in advance to set _ap to the desired side.\n\n&lt;dd class=\"notedate\"&gt;Posted on 8th Dec 2018\n&lt;dt class=\"note\"&gt;[[User:oOKexOo|oOKexOo]]\n&lt;dd class=\"note\"&gt;\nSince <template><title>GVI</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.86</value></part></template>: If you want to place a module with [[createUnit]], you have to ensure that the module gets activated automatically by setting '''[[BIS_fnc_initModules]]_disableAutoActivation''' to [[false]], ''e.g'':\n&lt;code&gt;[[private]] _grp = [[createGroup]] [[sideLogic]];\n\"ModuleSmokeWhite_F\" [[createUnit]] [\n\t[[getPos]] [[player]],\n\t_grp,\n\t\"[[this]] [[setVariable]] ['BIS_fnc_initModules_disableAutoActivation', [[false]], [[true]]];\"\n];&lt;/code&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on 18th Mar 2019\n&lt;dt class=\"note\"&gt;[[User:Killzone_Kid|Killzone_Kid]]\n&lt;dd class=\"note\"&gt;\nAlt Syntax is the older syntax and differs in functionality from the main, newer syntax. The main difference is that the older syntax '''does not''' return unit reference. This is because the unit created with Alt Syntax is created strictly where passed [[group]] is [[local]]. This means that if the group is remote the unit will be created on the different client than the one the command was executed on and therefore it is not possible to return created unit reference immediately. In contrast, the newer syntax allows creating units in remote groups while returning unit reference immediately, which could be unsafe and the appropriate warning is logged into ''.rpt'' file: &lt;tt&gt;Warning: Adding units to a remote group is not safe. Please use [[setGroupOwner]] to change the group owner first.&lt;/tt&gt;&lt;br&gt;&lt;br&gt;\nAnother very important difference is that the older syntax (Alt Syntax) will create unit of the same [[side]] as the side of the [[group]] passed as argument. For example, if the group is WEST and the unit faction is OPFOR of type, say &lt;tt&gt;\"O_Soldier_GL_F\"&lt;/tt&gt;, the unit created will be on the WEST side as well. In contrast, newer syntax will create the same unit on the EAST side in the WEST group, which will be treated as hostile by other group members and eliminated.&lt;br&gt;&lt;br&gt;\n<template lineStart=\"1\"><title>Warning </title><part><name index=\"1\"/><value> Beware that in MP if unit is created in remote group with older syntax, the unit init will execute on calling client sometime in the future, after the unit is created on remote client, therefore the following code will fail:\n <template><title>codecomment</title><part><name index=\"1\"/><value>// Real example of the bad code</value></part></template>\n \"O_Soldier_AR_F\" [[createUnit]] [<ext><name>nowiki</name><attr/></ext>[[position]] [[player]], someRemoteGroup, \"thisUnit <template><title>=</title></template> this\"];\n [[publicVariable]] \"thisUnit\";\n [[hint]] [[str]] [[isNil]] \"thisUnit\"; <template><title>codecomment</title><part><name index=\"1\"/><value>// [[true]]!\n // The unit reference is [[nil]] because init statement has not been executed on this client yet.</value></part></template>\n</value></part></template>\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on June 19, 2020 - 10:13 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:fusselwurm|fusselwurm]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n<template lineStart=\"1\"><title>GVI</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>1.98</value></part></template> note that even when setting the ''placement special'' parameter to \"NONE\", 3DEN-placed objects are being ignored when looking for a free position. In other words: units will spawn within editor-placed rocks or under houses.\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}