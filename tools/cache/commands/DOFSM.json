{"parse":{"title":"doFSM","pageid":2746,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> arma </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.00</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Unit Control </value></part><part><name>GROUP1</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Orders a unit to process command defined by [[FSM]] file (silently). \n\nUnlike with execFSM where ''_this'' is passed to the FSM, the following parameters are passed when using doFSM/commandFSM:\n\n; _leader: leader of subgroup with this command \n; _destination: command destination/position\n; _target: command target \n; _units: list of all persons in subgroup \n\n</value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> unit '''doFSM''' [fsmName, position, target] </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name>p1</name>=<value> unit: [[Object]] or [[Array]] (for multiple units) </value></part><part><name>PARAMETER1</name>=<value>\n</value></part><part><name>p2</name>=<value> [fsmName, position, target]: [[Array]] </value></part><part><name>PARAMETER2</name>=<value>\n\n</value></part><part><name>p3</name>=<value> fsmName: [[String]] </value></part><part><name>PARAMETER3</name>=<value>\n</value></part><part><name>p4</name>=<value> position: [[Array]] </value></part><part><name>PARAMETER4</name>=<value>\n</value></part><part><name>p5</name>=<value> target: [[Object]] </value></part><part><name>PARAMETER5</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Nothing]] </value></part><part><name>RETURNVALUE</name>=<value>\n____________________________________________________________________________________________\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;_soldierOne [[doFSM]] [\"move.fsm\", [[position]] [[player]], [[player]]];&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[FSM]], [[FSM_Editor_Manual]], [[commandFSM]], [[completedFSM]], [[execFSM]], [[getFSMVariable]], [[setFSMVariable]], [[unitReady]] </value></part><part><name>SEEALSO</name>=<value>\n\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dd class=\"notedate\"&gt;Posted on August 4, 2010 - 16:09\n&lt;dt class=\"note\"&gt;[[User:R\u00fcbe|R\u00fcbe]]&lt;dd class=\"note\"&gt;Do not ''doStop'' a unit in a FSM called with ''doFSM'' or ''commandFSM''. Doing so nevertheless will halt your FSM, since no links are followed anymore (doing so in an end state should be fine though). Also this may crash your game in certain mysterious circumstances.&lt;br&gt;&lt;br&gt;\nYou may design your FSM so that they may be called with doFSM/commandFSM and execFSM likewise by checking if ''_units'' or ''_this'' is nil and then init the variables accordingly. Just remember that you should use the low level ''moveTo'' (together with ''moveToCompleted'', ''moveToFailed'') if do-/commandFSM'd, and ''doMove'' or ''commandMove'' (together with ''unitReady'') if execFSM'd. A ''moveTo'' in an FSM started with ''execFSM'' won't do anything, likewise ''doMove'' in a FSM started with ''doFSM'' or ''commandFSM'' wont work either. Think about it for a minute and you will see why. (hint: a unit running a FSM called with ''doFSM'' or ''commandFSM'' will _never_ return true for ''(unitReady _unit)'')&lt;br&gt;&lt;br&gt;\nAnyway, if you want to be able to call your FSM either way, a \"ready\" condition might look light this: ''(moveToCompleted _unit) || (moveToFailed _unit) || (unitReady _unit)'', assuming you have a ''moveTo'' or a ''doMove'' (depending on how the fsm is called) in the prior state.\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n\n[[Category:Scripting Commands|DOFSM]]\n[[Category:Scripting Commands Armed Assault|DOFSM]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on February 14, 2015 - 13:36 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Katulobotomia|Katulobotomia]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nAdding to R\u00fcbe's note, doFSM can be checked if it has finished by ''unitReady'' as of 2015 and it will return ''true'' when your FSM has completed.\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}