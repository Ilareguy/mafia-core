{"parse":{"title":"isEqualTo","pageid":15047,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name>game1</name>=<value> arma3\n\n</value></part><part><name>version1 </name>=<value> 1.16\n\n</value></part><part><name>gr1</name>=<value> Variables\n\n</value></part><part><name>descr</name>=<value> Performs strict comparison between var1 and var2 and returns [[true]] if equal, otherwise [[false]]. Strict means that it would check that both arguments are of the same data type and then compare the values.&lt;br&gt;&lt;br&gt;\nSome differences between [[isEqualTo]] and [[==]]:\n* It performs case sensitive comparison on [[String]]s\n* It doesn't throw error when comparing different types, i.e. (\"eleven\" [[isEqualTo]] 11)\n* It can compare [[Array]]s, [[Script]]s and [[Boolean]]s ([[alive]] [[player]] [[isEqualTo]] [[true]])\n* It can compare non-existent game objects ([[grpNull]] [[isEqualTo]] [[grpNull]])\n* It can compare [[Namespace]]s (''As of Arma 3 v1.47'')\n* It is slightly faster than [[==]], especially when comparing [[String]]s &lt;br&gt;&lt;br&gt;\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Informative </value></part><part><name index=\"2\"/><value> A compiled code is not equal to the same compiled code made final: &lt;code&gt;_a <template><title>=</title></template> [[compile]] \"123\"; _b <template><title>=</title></template> [[compileFinal]] \"123\"; _a [[isEqualTo]] _b; // false&lt;/code&gt; </value></part></template>\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> Warning </value></part><part><name index=\"2\"/><value> When comparing [[Array]]s, if an array contains [[nil]] element, the comparison will return [[false]]. For example:&lt;br&gt;\n&lt;code&gt;[[private]] _array1 <template><title>=</title></template> [1,[[nil]],2];\n[[private]] _array2 <template><title>=</title></template> [1,[[nil]],2];\n_array1 [[isEqualTo]] _array2 // false&lt;/code&gt;\n&lt;u&gt;UNLESS&lt;/u&gt; the compared arrays are the same array:\n&lt;code&gt;[[private]] _array1 <template><title>=</title></template> [1,[[nil]],2];\n[[private]] _array2 <template><title>=</title></template> _array1;\n_array1 [[isEqualTo]] _array2 // true&lt;/code&gt;\nSee: [[BIS_fnc_areEqual]] vs. [[BIS_fnc_areEqualNotNil]]</value></part></template>\n\n</value></part><part><name>s1</name>=<value> val1 '''isEqualTo''' val2\n\n</value></part><part><name>p1</name>=<value> val1: [[Anything]]\n\n</value></part><part><name>p2</name>=<value> val2: [[Anything]]\n\n</value></part><part><name>r1</name>=<value> [[Boolean]]\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;_arr1 = [1,[2,[3]]];\n_arr2 = [1,[2,[3]]];\n[[if]] (_arr1 [[isEqualTo]] _arr2) [[then]] {[[hint]] \"Arrays match!\"}&lt;/code&gt;\n\n\t\t  \n</value></part><part><name>x2</name>=<value> &lt;code&gt;[[if]] (a [[isEqualTo]] b) [[then]] {[[hint]] \"a is equal to b\"};\n[[if]] !(a [[isEqualTo]] b) [[then]] {[[hint]] \"a is not equal to b\"};&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[isNotEqualTo]], [[isEqualTypeAll]], [[isEqualTypeAny]], [[isEqualType]], [[isEqualTypeParams]], [[isEqualTypeArray]], [[a == b]], [[Operators]]\n</value></part></template>\n\n&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on December 3, 2014 - 13:11 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Tajin|Tajin]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nSimply put, \"isEqualTo\" is a binary comparison. Therefor it is very fast but only accepts '''100%''' identical matches. In some other languages this is known as \"&amp;#61;&amp;#61;&amp;#61;\" instead of \"&amp;#61;&amp;#61;\".\n&lt;/dd&gt; \n\n&lt;dd class=\"notedate\"&gt;Posted on November 3, 2016 - 02:39 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Dedmen|Dedmen]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWhen comparing with nil result is [[Nothing]].\n&lt;code&gt;nil [[isEqualTo]] [[player]];&lt;/code&gt;\nReturns [[Nothing]] instead of expected [[false]]\n&lt;code&gt;[[diag_log]] [nil [[isEqualTo]] [[player]]];&lt;/code&gt;\nWill print &lt;tt&gt;[bool]&lt;/tt&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}