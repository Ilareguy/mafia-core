{"parse":{"title":"forEach","pageid":1588,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> ofp </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Program Flow </value></part><part><name>GROUP1</name>=<value>\n\n\n\n</value></part><part><name index=\"2\"/><value>1.00</value></part><part><name>Game version</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Executes the given command(s) on every item of an array.&lt;br&gt;\nThe array items are represented by the [[Magic Variables|magic variable]] '''[[_x]]'''. The array indices are represented by '''[[_forEachIndex]]'''.&lt;br&gt;\nIn <template><title>arma2</title></template> and later, the variable [[_x]] is always local to the [[forEach]] block so it is safe to nest them. </value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> code [[forEach]] array </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name>p1</name>=<value> code:\n* [[String]] (<template><title>ofp</title></template>&amp;nbsp;/&amp;nbsp;<template><title>arma</title></template>)\n* [[Code]] (<template><title>arma</title></template> and later) </value></part><part><name>PARAMETER1</name>=<value>\n\n</value></part><part><name>p2</name>=<value> array: [[Array]] - the array to iterate </value></part><part><name>PARAMETER2</name>=<value>\n\n</value></part><part><name index=\"5\"/><value> [[Anything]] - will return the value of last executed statement </value></part><part><name>RETURNVALUE</name>=<value>\n____________________________________________________________________________________________\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>SQF</value></part></template>\n{ [[_x]] [[setDamage]] 1 } [[forEach]] [[units]] [[group]] [[player]];&lt;/code&gt;\n&lt;code&gt;<template><title>codecomment</title><part><name index=\"1\"/><value>; SQS</value></part></template>\n\"[[_x]] [[setDammage]] 1\" [[forEach]] [[units]] [[group]] [[player]]&lt;/code&gt; </value></part><part><name>EXAMPLE1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> This command can also easily be used to execute a single command multiple times without respect to the array items.\n&lt;code&gt;{ [[player]] [[addMagazine]] \"30Rnd_556x45_Stanag\"; } [[forEach]] [1, 2, 3, 4];&lt;/code&gt; </value></part><part><name>EXAMPLE2</name>=<value>\n\n</value></part><part><name>x3</name>=<value> You can also use multiple commands in the same block:\n&lt;code&gt;{\n    [[Magic Variables|_x]] [[setCaptive]] [[true]];\n    [[removeAllWeapons]] [[Magic Variables|_x]];\n    [[doStop]] [[Magic Variables|_x]];\n} [[forEach]] [[units]] [[group]] [[this]];&lt;/code&gt; </value></part><part><name>EXAMPLE3</name>=<value>\n\n</value></part><part><name>x4</name>=<value> To get the index of a [[forEach]] loop, use [[_forEachIndex]]:\n&lt;code&gt;{ [[systemChat]] [[format]] [\"%1\", _forEachIndex]; } [[forEach]] [1,2,3]; <template><title>cc</title><part><name index=\"1\"/><value>will return: \"0\", \"1\", \"2\" in [[systemChat]] messages</value></part></template>&lt;/code&gt; </value></part><part><name>EXAMPLE4</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[set]], [[resize]], [[pushBack]], [[pushBackUnique]], [[apply]], [[reverse]], [[select]], [[in]], [[find]], [[findIf]], [[toArray]], [[toString]], [[count]], [[deleteAt]], [[deleteRange]], [[append]], [[sort]], [[param]], [[params]], [[arrayIntersect]], [[Control Structures]], [[splitString]], [[joinString]] </value></part><part><name>SEEALSO</name>=<value>\n</value></part></template>\n\n&lt;h3 style=\"display:none\"&gt;Notes&lt;/h3&gt;\n&lt;dl class=\"command_description\"&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>\n&lt;dd class=\"notedate\"&gt;Posted on July 20, 2010\n&lt;dt class=\"note\"&gt;[[User:Kronzky|Kronzky]]\n&lt;dd class=\"note\"&gt;\nIf arrays are used in forEach loops, _x uses them by reference, so any changes to _x will be applied to the original:\n&lt;code&gt;_arr1 = [1,2,3];\n_arr2 = [6,7,8];\n{ [[_x]] [[set]] [1,\"x\"] } [[forEach]] [_arr1,_arr2];&lt;/code&gt;\nwill change _arr1 to [1,\"x\",3], and _arr2 to [6,\"x\",8].\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style=\"display:none\"&gt;Bottom Section&lt;/h3&gt;\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.46|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.96|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands OFP 1.99|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Armed Assault|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on August 29, 2014 - 22:23 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Fett Li|Fett Li]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n[[forEach]] returns any (the last passed value will be the return value or just [[Nothing]], depends on the function called).\n&lt;code&gt;_var = {_x} [[forEach]] [<ext><name>nowiki</name><attr/></ext>[[nil]],\"s\",[[objNull]],[[configFile]] ]; <template><title>cc</title><part><name index=\"1\"/><value>return bin\\config.bin</value></part></template>\n_var = {_x [[setCaptive]] [[true]]} [[forEach]] [[allUnits]]; <template><title>cc</title><part><name index=\"1\"/><value>return nothing</value></part></template>&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on September 20, 2014&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Mossarelli|Mossarelli]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nUsing the foreach loop, since there are no variable for the index like say the for-do loop, there is a variable that you can use to check the index of the foreach loop.\n\n&lt;code&gt;{\n\t[[if]] ([[_forEachIndex]] == 1) [[then]] {\n\t\t// Copilot\n\t\t_x [[addUniform]] \"U_B_Soldier_VR\";\n\t} [[else]] {\n\t\t// Adams\n\t\t[_x, \"B_Soldier_TL_F\"] [[call]] [[BIS_fnc_loadInventory]];\n\t\t_x [[addUniform]] \"U_B_Soldier_VR\";\n\t\t_x [[setIdentity]] \"Bootcamp_B_Adams\";\n\t};\n} [[forEach]] _crew;\n&lt;/code&gt;\nSo when the array is past from _crew to the loop, index 1 (which is the second element) is the copilot of the \"B_Heli_Light_01_F\" and he will get \"U_B_Soldier_VR\" as a uniform. While the pilot which is index 0 (first element), will get the same uniform but will get the loadout of \"B_Soldier_TL_F\" and the identity of \"Bootcamp_B_Adams\".\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on January 2, 2015 - 22:35 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Heeeere's Johnny!|Heeeere's Johnny!]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n\nUsing [[exitWith]] inside a '''forEach''' loop will make '''forEach''' actually return something, namely whatever the '''exitWith''' returns:\n&lt;code&gt;_result = {\n    if(_x [[isEqualTo]] 3) [[exitWith]] {\"Hello\"}\n} '''forEach''' [1,2,3,4,5];\n//_result = \"Hello\"&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on November 28, 2017 - 13:46 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:dedmen|dedmen]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nBe careful when deleting ([[deleteAt]]) elements from an Array while you iterate over it.&lt;br&gt;\n[[forEachIndex|_forEachIndex]] will not move to reflect your change.&lt;br&gt;\n\nThe forEach code is doing the same as\n&lt;code&gt;_forEachIndex = 0;\nwhile {_forEachIndex &lt; count _array} do {\n    (_array select _forEachIndex) call code;\n    _forEachIndex = _forEachIndex + 1;\n}&lt;/code&gt;\n\nSo if you delete your current element from the array the other elements will shift forward. Meaning you skip one element.&lt;br&gt;\nExample:\n&lt;code&gt;_array = [1,2,3,4,5,6];\n{_array deleteAt _forEachIndex} forEach _array;\n&lt;/code&gt;\nAfter the first iteration your Array will be [2,3,4,5,6] and the _forEachIndex will be 1.&lt;br&gt;\nSo on next iteration you get the element at index 1 which will be 3. So you've just skipped the 2.&lt;br&gt;\nSo in the end you will only iterate over 1,3 and 6.\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}