{"parse":{"title":"disableSerialization","pageid":8238,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name index=\"1\"/><value> arma2\n\n</value></part><part><name index=\"2\"/><value>1.00\n\n</value></part><part><name>gr1</name>=<value> GUI Control\n\n</value></part><part><name index=\"3\"/><value> Disable saving of script containing this command. After this, the script can work with data types which do not support serialization (UI types). See [[Namespace#Namespace serialization|Namespace serialization]] for more information.\n\n<template lineStart=\"1\"><title>Feature </title><part><name index=\"1\"/><value> important </value></part><part><name index=\"2\"/><value> '''In <template><title>arma2</title></template>''' and up to a certain version of <template><title>arma3</title></template>, <comment>&lt;!--\n--&gt;</comment>giving a [[Display]] or [[Control]] to [[spawn]]ed code would raise an error due to the usage of the then non-serializable &lt;tt&gt;[[Magic Variables#this|_this]]&lt;/tt&gt; variable. <comment>&lt;!--\n--&gt;</comment>Using [[disableSerialization]] or [[uiNamespace]] wouldn't help; the trick here is to pass the argument inside an array:\n&lt;code&gt;_display <template><title>=</title></template> [[findDisplay]] 46;&lt;br&gt;<comment>&lt;!--\n--&gt;</comment>&amp;nbsp;_display&amp;nbsp; [[spawn]] { [[hint]] [[str]] _this; };\t\t\t\t<template><title>cc</title><part><name index=\"1\"/><value>would raise a serialization error</value></part></template>&lt;br&gt;<comment>&lt;!--\n--&gt;</comment>[_display] [[spawn]] { [[hint]] [[str]] (_this [[select]] 0); };\t<template><title>cc</title><part><name index=\"1\"/><value>OK</value></part></template>&lt;/code&gt;</value></part></template>\n\n</value></part><part><name index=\"4\"/><value> [[disableSerialization]]\n\n</value></part><part><name index=\"5\"/><value> [[Nothing]]\n\n</value></part><part><name>x1</name>=<value> &lt;code&gt;[[disableSerialization]];\n_display = [[findDisplay]] 46;&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[Display]], [[displayAddEventHandler]], [[displayRemoveAllEventHandlers]], [[displayRemoveEventHandler]], [[uiSleep]]\n</value></part></template>\n\n&lt;dl class='command_description'&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>&lt;dd class=\"notedate\"&gt;Posted on 19 June, 2010\t &lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Str|Str]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nCan be used to detecting load. Scope with disabled serialization is discontinued after load, even if there's endless loop inside.\n&lt;code&gt;_loaded = [] [[spawn]] { [[disableSerialization]]; [[waitUntil]] { [[false]] }; };\n[[waitUntil]] { [[scriptDone]] _loaded; };\n[[hint]] \"Game was loaded!\";&lt;/code&gt;\nWorks for all possible load types - loading user save, loading autosave and resuming mission from main menu.\n\nUse with caution, as it handles two threads in memory, having impact at overall [[Code_Optimisation#Threads|scripting time]].\n\n&lt;dd class=\"notedate\"&gt;Posted on 23 October, 2013\t &lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone_Kid|Killzone_Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n\nIf you do not store UI elements ([[Display]], [[Control]]) in variables, you do not need [[disableSerialization]]; UI elements are usually returned by scripting commands such as [[findDisplay]] or passed as params in UI event handler scripts ([[displayAddEventHandler]], [[ctrlAddEventHandler]]). \n\nThis code will require [[disableSerialization]]: &lt;code&gt;[[disableSerialization]];\n_display = [[findDisplay]] 123;\n_ctrl = _display [[displayCtrl]] -1;\n_ctrl [[ctrlSetText]] \"LOL\";&lt;/code&gt;\nThis code will not: &lt;code&gt;[[findDisplay]] 123 [[displayCtrl]] -1 [[ctrlSetText]] \"LOL\";&lt;/code&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on July 25, 2017 - 18:15 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:IT07|IT07]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nIn Arma 3 1.72.142223, a scripted FSM does somehow not work with [[disableSerialization]]. As a workaround, store a display inside an array.\nExample: &lt;code&gt;_d = [findDisplay idd];&lt;/code&gt;\n\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>tkoh</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template></root>"}}}