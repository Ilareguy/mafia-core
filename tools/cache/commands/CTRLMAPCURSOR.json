{"parse":{"title":"ctrlMapCursor","pageid":8212,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> arma2 </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.00</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> GUI Control - Map </value></part><part><name>GROUP1</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Changes the default cursor that appears when interacting with a map control to a custom one. Use an empty string to restore the default cursor. If the specified cursor does not exist, the default is used and no error is produced. ( NOT in case of Arma 3. Using an empty string will result in an error: \"No entry 'bin\\config.bin/CfgWrapperUI/Cursors.' ). The cursor is the name of a config entry from ''CfgWrapperUI / Cursors''. This command has the following specifics:\n* When used on Main Map ([[findDisplay]] 12 [[displayCtrl]] 51) it is possible to override multiple default cursors. For example, while leaving default \"Arrow\" intact, it is possible to just override \"Scroll\" with lets say \"Wait\" (Example 3)\n* When used on a custom map, for example user made Mini Map, there is only one single cursor \"\" for everything, therefore only this cursor can be overridden (see Example 4 on how to override it)\nSome possible class names (for the whole list see [[ctrlMapCursor/cursors]]):\n* Arrow\n* Track\n* Move\n* Scroll\n* Rotate\n* Track3D\n* Move3D\n* Rotate3D\n* Raise3D\n* Wait\n* HC_move\n* HC_overFriendly\n* HC_overEnemy\n* HC_overMission\n* HC_unsel\n'''NOTE1''': Cursor names are '''case sensitive'''.</value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> control '''ctrlMapCursor''' [defaultCursor, newCursor] </value></part><part><name>SYNTAX</name>=<value>\n\n</value></part><part><name>p1</name>=<value> control: [[Control]] - Map control </value></part><part><name>PARAMETER1</name>=<value> \n\n</value></part><part><name>p2</name>=<value> defaultCursor: [[String]] - Cursor class name </value></part><part><name>PARAMETER2</name>=<value> \n\n</value></part><part><name>p3</name>=<value> newCursor: [[String]] - Cursor class name </value></part><part><name>PARAMETER3</name>=<value> \n\n</value></part><part><name index=\"5\"/><value> [[Nothing]] </value></part><part><name>RETURNVALUE</name>=<value> \n\n\n</value></part><part><name>x1</name>=<value> &lt;code&gt;_map [[ctrlMapCursor]] [\"Track\", \"Arrow\"];&lt;/code&gt;</value></part><part><name>EXAMPLE1</name>=<value> \n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;[[uiNamespace]] [[setVariable]] [\"_map\",[[findDisplay]] 12 [[displayCtrl]] 51];\n([[uiNamespace]] [[getVariable]] \"_map\") [[ctrlMapCursor]] [\"Track\",\"HC_overFriendly\"];&lt;/code&gt;</value></part><part><name>EXAMPLE2</name>=<value> \n\n</value></part><part><name>x3</name>=<value> &lt;code&gt;[[findDisplay]] 12 [[displayCtrl]] 51 [[ctrlMapCursor]] [\"Scroll\", \"Wait\"];&lt;/code&gt;</value></part><part><name>EXAMPLE3</name>=<value>\n\n</value></part><part><name>x4</name>=<value> Cycle through all available cursors over custom map:&lt;code&gt;0 = [] [[spawn]] \n{\t\n\t[[disableSerialization]];\n\t_map = [[findDisplay]] 46 [[createDisplay]] \"RscCredits\" [[ctrlCreate]] [\"RscMapControl\", -1];\n\t_map [[ctrlSetPosition]] [0,0,1,1];\n\t_map [[ctrlCommit]] 0;\n\t{\n\t\t_map [[ctrlMapCursor]] [\"\", [[configName]] _x]; //&lt;-- the actual usage\n\t\t[[hint]] [[format]] [\"Current cursor: %1\", [[configName]] _x];\n\t\t[[sleep]] 1;\n\t} \n\t[[forEach]] (\"true\" [[configClasses]] ([[configFile]] &gt;&gt; \"CfgWrapperUI\" &gt;&gt; \"Cursors\"));\n};&lt;/code&gt;</value></part><part><name>EXAMPLE4</name>=<value>\n\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[setMousePosition]], [[getMousePosition]] </value></part><part><name>SEEALSO</name>=<value> \n\n</value></part><part><name index=\"7\"/><value>  </value></part><part><name>MPBEHAVIOUR</name>=<value> \n____________________________________________________________________________________________\n</value></part></template>\n\n&lt;h3 style='display:none'&gt;Notes&lt;/h3&gt;\n&lt;dl class='command_description'&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style='display:none'&gt;Bottom Section&lt;/h3&gt;\n\n[[Category:Scripting Commands Arma 2|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Take On Helicopters|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on February 8, 2016 - 22:43 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Bull A|Bull A]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWhen using this command, the cursor will change for the whole display, resulting in visual glitches. Adding the onMouseMoving event handler can help solve this problem:\n&lt;code&gt;\n_control [[ctrlAddEventHandler]] [\"MouseMoving\",{\n   _this [[params]] [\n      [\"_mapCtrl\",[[controlNull]],[[[controlNull]]]],\n      [\"_xPos\",-1,[0]],\n      [\"_yPos\",-1,[0]],\n      [\"_mouseIn\",[[false]],[[[true]]]]\n   ];\n\n   if (_mouseIn) then {\n      // Mouse is in control area\n      _mapCtrl [[ctrlMapCursor]] [\"\",\"Track\"];\n   } else {\n      // Mouse is out of control area, goes back to arrow\n      _mapCtrl [[ctrlMapCursor]] [\"\",\"Arrow\"];\n   };\n}];\n&lt;/code&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}