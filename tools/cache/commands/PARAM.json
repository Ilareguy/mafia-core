{"parse":{"title":"param","pageid":17275,"parsetree":{"*":"<root><template><title>Command</title><part><name>Comments</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"1\"/><value> arma3 </value></part><part><name>Game name</name>=<value>\n\n</value></part><part><name index=\"2\"/><value>1.48</value></part><part><name>Game version</name>=<value>\n\n</value></part><part><name>gr1</name>=<value> Variables </value></part><part><name>GROUP1</name>=<value>\n\n</value></part><part><name>gr2</name>=<value> Arrays </value></part><part><name>GROUP2</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"3\"/><value> Extracts a single value with given index from input argument, similar to [[BIS_fnc_param]].  When used without argument, as shown in main syntax, internal variable [[_this]], which is usually available inside functions and event handlers, is used as argument. If input argument is not an array, it will be converted to 1 element array.\n&lt;br&gt;&lt;br&gt;\nIf extracted item of input with given index is undefined, of the wrong type or of the wrong length (if the item is an array), default value is used instead. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.</value></part><part><name>DESCRIPTION</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"4\"/><value> [[param]] [index, defaultValue, expectedDataTypes, expectedArrayCount] </value></part><part><name>SYNTAX</name>=<value>\n\n\n</value></part><part><name>p1</name>=<value> [index, defaultValue, expectedDataTypes, expectedArrayCount]: [[Array]]</value></part><part><name>Parameter1</name>=<value>\n</value></part><part><name>p2</name>=<value> index: [[Number]] - index of required item in the input array.</value></part><part><name>Parameter2</name>=<value>\n\n</value></part><part><name>p3</name>=<value> defaultValue (Optional): [[Anything]] - a default value to return if input is undefined, of the wrong type or of the wrong length (if the item is an array). </value></part><part><name>Parameter3</name>=<value>\n</value></part><part><name>p4</name>=<value> expectedDataTypes (Optional): [[Array]] of direct [[Data Types]] - checks if passed value is one of listed [[Data Types]]. If not, default value is used instead. Empty array [] means every data type is accepted.</value></part><part><name>Parameter4</name>=<value>\n</value></part><part><name>p5</name>=<value> expectedArrayCount (Optional): [[Number]] or [[Array]] - a single size or array of sizes. If passed input value is an array, checks that it has a certain number of elements. If not, default value is used instead. Empty array [] means any size is accepted. </value></part><part><name>Parameter5</name>=<value>\n</value></part><part><name index=\"5\"/><value> [[Anything]] - extracted value on success or default value otherwise. [[Nothing]] if syntax error occurred. </value></part><part><name>RETURNVALUE</name>=<value>\n\n</value></part><part><name> s2</name>=<value> argument [[param]] [index, defaultValue, expectedDataTypes, expectedArrayCount] </value></part><part><name>SYNTAX2</name>=<value>\n\n</value></part><part><name>p21</name>=<value> argument: [[Anything]] - A usual array of params is expected. If a non-array value is passed, it will be converted to 1 element array </value></part><part><name>PARAMETER21</name>=<value>\n\n</value></part><part><name>p22</name>=<value> [index, defaultValue, expectedDataTypes, expectedArrayCount]: [[Array]] </value></part><part><name>Parameter22</name>=<value>\n</value></part><part><name>p23</name>=<value> index: [[Number]] - index of required item in the input array.</value></part><part><name>Parameter23</name>=<value>\n</value></part><part><name>p24</name>=<value> defaultValue (Optional): [[Anything]] - a default value to return if input is undefined, of the wrong type or of the wrong length (if the item is an array).</value></part><part><name>Parameter24</name>=<value>\n</value></part><part><name>p25</name>=<value> expectedDataTypes (Optional): [[Array]] of direct [[Data Types]] - checks if passed value is one of listed [[Data Types]]. If not, default value is used instead. Empty array [] means every data type is accepted.</value></part><part><name>Parameter25</name>=<value>\n</value></part><part><name>p26</name>=<value> expectedArrayCount (Optional): [[Number]] or [[Array]] - a single size or array of sizes. If passed input value is an array, checks that it has a certain number of elements. If not, default value is used instead. Empty array [] means any size is accepted. </value></part><part><name>Parameter26</name>=<value>\n</value></part><part><name>r2</name>=<value> [[Anything]] - extracted value on success or default value otherwise. [[Nothing]] if syntax error occurred. </value></part><part><name>RETURNVALUE2</name>=<value>\n____________________________________________________________________________________________\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;[1, 2, 3] [[call]] \n{\n\t[[private]] _one = [[param]] [0, 1];\n\t[[private]] _two = [[param]] [1, 2];\n\t[[private]] _three = [[param]] [2, 3];\n\t<template><title>cc</title><part><name index=\"1\"/><value>...</value></part></template>\n};&lt;/code&gt; </value></part><part><name>Example1</name>=<value>\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;[123] [[call]] \n{\n\t[[private]] _val = [[param]] [0];\n};\n\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>Below would produce the same result as above</value></part></template>\n123 [[call]] \n{\n\t[[private]] _val = [[param]] [0];\n};&lt;/code&gt; </value></part><part><name>Example2</name>=<value>\n\n</value></part><part><name>x3</name>=<value> &lt;code&gt;_z = [[position]] [[player]] [[param]] [2, 0];\n[[if]] (_z &gt; 10) [[then]] \n{\n\t[[hint]] \"YOU ARE FLYING!\";\n};&lt;/code&gt; </value></part><part><name>Example3</name>=<value>\n\n\n</value></part><part><name>x4</name>=<value> &lt;code&gt;fnc = \n{\n\t[[private]] _pos = [[param]] [0, [0,0,0], [<ext><name>nowiki</name><attr/></ext>[[objNull]], []], [2,3]];\n\t[[private]] _rad = [[param]] [1, 0, [0]];\n\t_pos [[nearObjects]] _rad;\n};\n\n[<ext><name>nowiki</name><attr/></ext>[[position]] [[player]], 25] [[call]] fnc; <template><title>cc</title><part><name index=\"1\"/><value>ok</value></part></template>\n[<ext><name>nowiki</name><attr/></ext>[[player]], 25] [[call]] fnc; <template><title>cc</title><part><name index=\"1\"/><value>ok</value></part></template>\n[25, [[player]]] [[call]] fnc; <template><title>cc</title><part><name index=\"1\"/><value>default values are used</value></part></template>&lt;/code&gt; </value></part><part><name>Example4</name>=<value>\n____________________________________________________________________________________________\n\n</value></part><part><name index=\"6\"/><value> [[params]], [[select]], [[set]], [[resize]], [[reverse]], [[in]], [[find]], [[findIf]], [[toArray]], [[toString]], [[forEach]], [[count]], [[deleteAt]], [[deleteRange]], [[append]], [[sort]], [[arrayIntersect]], [[splitString]], [[joinString]], [[isEqualTypeAll]], [[isEqualType]], [[isEqualTypeParams]], [[isEqualTypeArray]], [[isEqualTypeAny]], [[typeName]], [[BIS_fnc_param]] </value></part><part><name>SEEALSO</name>=<value>\n</value></part></template>\n\n[[Category:Scripting_Commands_Arma_3]]\n[[Category:Arma_3:_New_Scripting_Commands_List]]\n\n&lt;h3 style='display:none'&gt;Notes&lt;/h3&gt;\n&lt;dl class='command_description'&gt;\n<comment>&lt;!-- Note Section BEGIN --&gt;\n</comment>\n<comment>&lt;!-- Note Section END --&gt;\n</comment>&lt;/dl&gt;\n\n&lt;h3 style='display:none'&gt;Bottom Section&lt;/h3&gt;\n[[Category:Arma_3:_New_Scripting_Commands_List|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands Arma 3|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n[[Category:Scripting Commands|<template><title>uc:<template><title>PAGENAME</title></template></title></template>]]\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on November 8, 2016 - 07:50 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Demellion|Demellion]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nYou can also use '''param''' in a complex with another commands. For example [[call]], [[compile]] and [[format]]: \n&lt;code&gt;[\"var = 2\"] [[call]] {\n  [[call]] [[compile]] [[format]] [\"%1\", [[param]] [0,\"\",[\"\"]]]; // compiled param string value\n  [[hint]] [[str]] (var); // 2\n};\n&lt;/code&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}