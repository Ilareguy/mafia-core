{"parse":{"title":"params","pageid":17245,"parsetree":{"*":"<root><template><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name index=\"1\"/><value> arma3\n</value></part><part><name index=\"2\"/><value>1.48\n\n</value></part><part><name>gr1</name>=<value> Variables\n\n</value></part><part><name>gr2</name>=<value> Arrays\n\n</value></part><part><name index=\"3\"/><value> Parses input argument into array of [[private]] variables. When used without argument, as shown in main syntax, internal variable [[Magic Variables#this|_this]], which is usually available inside functions and event handlers, is used as argument.\n&lt;br&gt;&lt;br&gt;\nIn addition to simple parsing directly into variables, input can be tested in case it is undefined, of the wrong type or of the wrong size (if array) and substituted if necessary with default values. Since Arma 3 v1.53.132691, onscreen errors are displayed for when the input is of the wrong type or size.&lt;br&gt;&lt;br&gt;\n\n<template lineStart=\"1\"><title>Feature</title><part><name index=\"1\"/><value>Warning</value></part><part><name index=\"2\"/><value> All variables names must start with underscore and be enclosed in quotes: &lt;tt&gt;[[params]] [&lt;span style<template><title>=</title></template>\"color:red;font-weight:bold\"&gt;\"_&lt;/span&gt;myVar1&lt;span style<template><title>=</title></template>\"color:red;font-weight:bold\"&gt;\"&lt;/span&gt;, &lt;span style<template><title>=</title></template>\"color:red;font-weight:bold\"&gt;\"_&lt;/span&gt;myVar2&lt;span style<template><title>=</title></template>\"color:red;font-weight:bold\"&gt;\"&lt;/span&gt;];&lt;/tt&gt;\n</value></part></template>\n<template lineStart=\"1\"><title>Feature</title><part><name index=\"1\"/><value>Informative</value></part><part><name index=\"2\"/><value> It is a good practice to make your local variables '''private''' (through [[private]] or [[params]]) in order to avoid overwriting a local variable of the same name.</value></part></template>\n\n</value></part><part><name index=\"4\"/><value> [[params]] [element1, element2,...elementN]\n\n</value></part><part><name>p1</name>=<value> [element1, element2,...elementN]: [[Array]] - format array\n\n</value></part><part><name>p2</name>=<value> elementN: [[String]] or [[Array]]\n&lt;br&gt; If [[String]] then it is the name of a [[private]] variable (must begin with underscore _, e.g. \"_myVar\")\n&lt;br&gt; If [[Array]] then it should be one of the following constructs:\n* [variableName, defaultValue]\n* [variableName, defaultValue, expectedDataTypes]\n* [variableName, defaultValue, expectedDataTypes, expectedArrayCount]\n&lt;dd class=\"param\"&gt;&lt;span style=\"padding-left:20px\"&gt;''variableName'': [[String]] - name of a [[private]] variable (must begin with underscore _, e.g. \"_myVar\")&lt;/span&gt;&lt;/dd&gt;\n&lt;dd class=\"param\"&gt;&lt;span style=\"padding-left:20px\"&gt;''defaultValue'': [[Anything]] - default value to return if input element is undefined, of the wrong type or of the wrong size (if array).&lt;/span&gt;&lt;/dd&gt;\n&lt;dd class=\"param\"&gt;&lt;span style=\"padding-left:20px\"&gt;''expectedDataTypes'' (Optional): [[Array]] of direct [[:Category: Data Types| Data Types]] -  checks if passed value is one of listed Data Types. If not, default value is used instead. Empty array [] means every data type is accepted.&lt;/span&gt;&lt;/dd&gt;\n&lt;dd class=\"param\"&gt;&lt;span style=\"padding-left:20px\"&gt;''expectedArrayCount'' (Optional): [[Number]] or [[Array]]  - a single size or array of sizes. If passed input value is an array, checks that it has a certain number of elements. If not, default value is used instead. Empty array [] means any size is accepted.&lt;/span&gt;&lt;/dd&gt;\n</value></part><part><name index=\"5\"/><value> [[Boolean]] - [[false]] if error occurred or default value has been used, otherwise [[true]]\n\n</value></part><part><name> s2</name>=<value> argument [[params]] [element1, element2,...elementN]\n\n</value></part><part><name>p21</name>=<value> argument: [[Anything]] - A usual array of params is expected. If a non-array argument is passed, it will be converted to 1 element array\n</value></part><part><name>p22</name>=<value> [element1, element2,...elementN]: [[Array]] - format array\n</value></part><part><name>p23</name>=<value> elementN: [[String]] or [[Array]]:\n&lt;br&gt; If [[String]] then it is the name of a [[private]] variable (must begin with underscore _, e.g. \"_myVar\")\n&lt;br&gt; If [[Array]] then it should be one of the following constructs:\n* [variableName, defaultValue]\n* [variableName, defaultValue, expectedDataTypes]\n* [variableName, defaultValue, expectedDataTypes, expectedArrayCount]\n&lt;dd class=\"param\"&gt;&lt;span style=\"padding-left:20px\"&gt;''variableName'': [[String]] - name of a [[private]] variable (must begin with underscore _, e.g. \"_myVar\")&lt;/span&gt;&lt;/dd&gt;\n&lt;dd class=\"param\"&gt;&lt;span style=\"padding-left:20px\"&gt;''defaultValue'': [[Anything]] - default value to return if input element is undefined, of the wrong type or of the wrong size (if array).&lt;/span&gt;&lt;/dd&gt;\n&lt;dd class=\"param\"&gt;&lt;span style=\"padding-left:20px\"&gt;''expectedDataTypes'' (Optional): [[Array]] of direct [[:Category: Data Types| Data Types]] -  checks if passed value is one of listed Data Types. If not, default value is used instead. Empty array [] means every data type is accepted.&lt;/span&gt;&lt;/dd&gt;\n&lt;dd class=\"param\"&gt;&lt;span style=\"padding-left:20px\"&gt;''expectedArrayCount'' (Optional): [[Number]] or [[Array]]  - a single size or array of sizes. If passed input value is an array, checks that it has a certain number of elements. If not, default value is used instead. Empty array [] means any size is accepted.&lt;/span&gt;&lt;/dd&gt;\n</value></part><part><name>r2 </name>=<value> [[Boolean]] - [[false]] if error occurred or default value has been used, otherwise [[true]]\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;[1, 2, 3] [[call]] {\n\t[[private]] [\"_one\", \"_two\", \"_three\"];\n\t_one = _this [[select]] 0;\n\t_two = _this [[select]] 1;\n\t_three = _this [[select]] 2;\n\t<template><title>cc</title><part><name index=\"1\"/><value>...</value></part></template>\n};\n\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>Same as above, only using params</value></part></template>\n[1, 2, 3] [[call]] {\n\t[[params]] [\"_one\", \"_two\", \"_three\"];\n\t<template><title>cc</title><part><name index=\"1\"/><value>...</value></part></template>\n};&lt;/code&gt;\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;[123] [[call]] {\n\t[[params]] [\"_myvar\"];\n};\n\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>Below would produce the same result as above</value></part></template>\n123 [[call]] {\n\t[[params]] [\"_myvar\"];\n};&lt;/code&gt;\n\n</value></part><part><name>x3</name>=<value> &lt;code&gt;[[position]] [[player]] [[params]] [\"\", \"\", \"_z\"];\n[[if]] (_z &gt; 10) [[then]] {\n\t[[hint]] \"YOU ARE FLYING!\";\n};&lt;/code&gt;\n\n</value></part><part><name>x4</name>=<value> &lt;code&gt;[1, [[nil]], 2] [[params]] [\"_var1\", \"_var2\", \"_var3\"];\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>All 3 variables are made private but only _var1 and _var3 are defined</value></part></template>\n\n[1, [[nil]], 2] [[params]] [\"_var1\", [\"_var2\", 23], \"_var3\"];\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>All 3 variables are private and defined</value></part></template>&lt;/code&gt;\n\n</value></part><part><name>x5</name>=<value> &lt;code&gt;[1, 2] [[call]] {\n\t[[if]] (![[params]] [\"_var1\", \"_var2\", [\"_var3\", [[true]], [<ext><name>nowiki</name><attr/></ext>[[true]]]]]) [[exitWith]] {\n\t\t[[hint]] [[str]] [_var1, _var2, _var3];\n\t};\n};\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>The hint shows [1,2,true]</value></part></template>\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>Script exits, default value was used due to missing value</value></part></template>\n\n[1, 2, 3] [[call]] {\n\t[[if]] (![[params]] [\"_var1\", \"_var2\", [\"_var3\", [[true]], [<ext><name>nowiki</name><attr/></ext>[[true]]]]]) [[exitWith]] {\n\t\t[[hint]] [[str]] [_var1, _var2, _var3];\n\t};\n};\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>The hint shows [1,2,true]</value></part></template>\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>Script exits, default value was used due incorrect value type</value></part></template>&lt;/code&gt;\n\n</value></part><part><name>x6</name>=<value> &lt;code&gt;[1, \"ok\", [1, 2, 3]] [[call]] {\n\t[[if]] (![[params]] [\n\t\t[\"_var1\", 0, [0]],\n\t\t[\"_var2\", \"\", [\"\"]],\n\t\t[\"_var3\", [0,0,0], [<ext><name>nowiki</name><attr/></ext>[], [[objNull]], 0], [2,3]]\n\t]) [[exitWith]] {};\n\t[[hint]] \"ok\";\n};\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>Passes validation</value></part></template>\n\n[1, 2, [3, 4, 5]] [[call]] {\n\t[[if]] (![[params]] [\"_var1\", \"_var2\", [\"_var3\", [], [<ext><name>nowiki</name><attr/></ext>[], [[objNull]], 0], 0]]) [[exitWith]] {};\n\t[[hint]] \"ok\";\n};\n<template lineStart=\"1\"><title>cc</title><part><name index=\"1\"/><value>Fails, because passed array is expected to be of 0 length, i.e. empty</value></part></template>&lt;/code&gt;\n</value></part><part><name>x7</name>=<value> &lt;code&gt;[[position]] [[player]] [[params]] [\"_x\", \"_y\"]; \n[[player]] [[setPos]] [_x, _y, 100];&lt;/code&gt;\n\n</value></part><part><name>x8</name>=<value> &lt;code&gt;[1, 2, 3, [4, 5, 6]] [[call]] {\n\t[[params]] [\"_one\", \"_two\", \"_three\"];\n\t_this [[select]] 3 [[params]] [\"_four\", \"_five\", \"_six\"];\n};&lt;/code&gt;\n\n</value></part><part><name>x9</name>=<value> &lt;code&gt;{\n\t_x [[params]] [\"_group\", \"_index\"];\n\t<template><title>cc</title><part><name index=\"1\"/><value>...</value></part></template>\n} [[forEach]] [[waypoints]] [[group]] [[player]];\n\nfn_someFnc = {\n\t[[params]] [\"_position\", [\"_direction\", 0], [\"_name\", \"\"]];\n\t<template><title>cc</title><part><name index=\"1\"/><value>Extract the x, y, and z from \"_position\" array:</value></part></template>\n\t_position [[params]] [\"_x\", \"_y\", \"_z\"];\n\t<template><title>cc</title><part><name index=\"1\"/><value>...</value></part></template>\n};\n\n<ext><name>nowiki</name><attr/><inner>[</inner><close>&lt;/nowiki&gt;</close></ext>[[position]] [[player]], [[direction]] [[player]], [[name]] [[player]]] [[call]] fn_someFnc;&lt;/code&gt;\n\n</value></part><part><name>x10</name>=<value> &lt;code&gt;[[player]] [[addEventHandler]] [\"HitPart\", {\n\t_this [[select]] 0 [[params]] [\"_target\", \"_shooter\", \"_projectile\"];\n}];&lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[param]], [[select]], [[set]], [[resize]], [[reverse]], [[in]], [[find]], [[findIf]], [[toArray]], [[toString]], [[forEach]], [[count]], [[deleteAt]], [[deleteRange]], [[append]], [[sort]], [[arrayIntersect]], [[splitString]], [[joinString]], [[isEqualTypeAll]], [[isEqualType]], [[isEqualTypeParams]], [[isEqualTypeArray]], [[isEqualTypeAny]], [[typeName]], [[BIS_fnc_param]]\n</value></part></template>\n\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>New Scripting Commands</value></part></template>\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on November 3, 2016 - 04:07 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Dedmen|Dedmen]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWith a function only taking one Parameter, it doesn't matter whether the parameter is in an array or not:&lt;br&gt;\n\nExample:\n&lt;code&gt;1 call {\n\tparams [ [\"_number\",0, [0]] ];\n};\nor\n[1] call {\n\tparams [ [\"_number\",0, [0]] ];\n};&lt;/code&gt;\n\nBut when the one Parameter is an array that parameter has to be inside of an array when the function is called&lt;br&gt;\nExample:\n&lt;code&gt;[1,2] call {\n\tparams [ [\"_array\", [], [[]], 2] ];\n}; <template><title>cc</title><part><name index=\"1\"/><value>Fails</value></part></template>\n\n<ext><name>nowiki</name><attr/><inner>[[1,2]]</inner><close>&lt;/nowiki&gt;</close></ext> call {\n\tparams [ [\"_array\", [], [[]], 2] ];\n}; <template><title>cc</title><part><name index=\"1\"/><value>Succeeds</value></part></template>&lt;/code&gt;\n\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on July 4, 2019 - 16:54 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:7erra|7erra]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nIt is valid to redefine the [[Magic Variables#this|_this]] variable and use [[params]] again like this:&lt;br&gt;\n&lt;code&gt;[1, 2, [3, 4]] call {\n    params [\"_one\", \"_two\", \"_this\"];\n    params [\"_three\", \"_four\"];\n};&lt;/code&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;</comment></root>"}}}