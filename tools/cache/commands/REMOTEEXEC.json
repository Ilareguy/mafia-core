{
    "parse": {
        "title": "remoteExec",
        "pageid": 17234,
        "parsetree": {
            "*": "<root><template><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Remote Execution</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>Scripting Commands</value></part></template>\n<template lineStart=\"1\"><title>GameCategory</title><part><name index=\"1\"/><value>arma3</value></part><part><name index=\"2\"/><value>New Scripting Commands</value></part></template>\n\n\n<template lineStart=\"1\"><title>RV</title><part><name>type</name>=<value>command\n\n</value></part><part><name>game1</name>=<value> arma3\n\n</value></part><part><name>version1</name>=<value> 1.50\n\n</value></part><part><name>gr1 </name>=<value> Multiplayer\n\n</value></part><part><name>descr</name>=<value> Asks the server to execute the given function or script command on the given target machine(s).\n* Functions are executed in the [[Scheduler#Scheduled_Environment|scheduled environment]]; suspension is allowed.\n* Script commands are executed in the [[Scheduler#Unscheduled_Environment|unscheduled environment]]; suspension is not allowed.&lt;br&gt;\nRead [[Arma 3: Remote Execution]] for more information about remote execution, security features and JIP techniques.\n\n<template lineStart=\"1\"><title>Feature</title><part><name index=\"1\"/><value>Informative</value></part><part><name index=\"2\"/><value>Just like [[remoteExecCall]], [[remoteExec]] can be used in SP; the behaviour is the same as in MP.</value></part></template>\n\n<template lineStart=\"1\"><title>Feature</title><part><name index=\"1\"/><value>Informative</value></part><part><name index=\"2\"/><value>The direct execution of [[call]] or [[spawn]] via [[remoteExec]] (or [[remoteExecCall]]) should be avoided to prevent issues in cases where the remote execution of [[call]] or [[spawn]] is blocked by [[Arma_3:_CfgRemoteExec|CfgRemoteExec]]. Instead it is recommended to create a function which is then excecuted by [[remoteExec]] (or [[remoteExecCall]]).</value></part></template>\n\n</value></part><part><name>s1</name>=<value> params [[remoteExec]] [functionName, targets, JIP]\n\n</value></part><part><name>p1</name>=<value> '''params''': [[Anything]]\n&lt;br&gt;Example for scripted function: \n&lt;code&gt;// &amp;lt;params&amp;gt; [[spawn]] fnc_someScriptedFunction;\n&amp;lt;params&amp;gt; [[remoteExec]] [\"fnc_someScriptedFunction\", targets, JIP];&lt;/code&gt;\nExamples for script commands of every kind:\n&lt;code&gt;// someScriptCommand;\n[] [[remoteExec]] [\"someScriptCommand\", targets, JIP];&lt;/code&gt;\n&lt;code&gt;// someScriptCommand &amp;lt;params&amp;gt;;\n[&amp;lt;params&amp;gt;] [[remoteExec]] [\"someScriptCommand\", targets, JIP];&lt;/code&gt;\n&lt;code&gt;// &amp;lt;params1&amp;gt; someScriptCommand &amp;lt;params2&amp;gt;;\n[&amp;lt;params1&amp;gt;, &amp;lt;params2&amp;gt;] [[remoteExec]] [\"someScriptCommand\", targets, JIP];&lt;/code&gt;\n\n</value></part><part><name>p2</name>=<value> '''functionName''': [[String]] - function or command name.&lt;br&gt;\nWhile any function can be used, only commands and functions defined in [[CfgRemoteExec]] will be executed.\n\n</value></part><part><name>p3</name>=<value> '''targets''' (Optional): [default: 0 = everyone]\n* [[Number]]\n** When 0, the function or command will be executed globally, i.e. on the server and every connected client, including the one where [[remoteExec]] was originated. \n** When 2, it will be executed only on the [[isServer|server]]. \n** When 3, 4, 5... it will be executed on the client where [[clientOwner]] ID matches the given number. \n** When number is negative, the effect is inverted. -2 means execute on every client but not the server. -12, for example, means execute on the server and every client, but not on the client where [[clientOwner]] ID is equal to 12.\n* [[Object]] - the function will be executed only where unit is local\n* [[String]] - the function will be executed only where object or group defined by the variable with passed name is local\n* [[Side]] - the function will be executed only on clients where the player is on the specified side\n* [[Group]] - the function will be executed only on clients where the player is in the specified group. In order to execute the function where group is [[local]] pass owner of the group as param: &lt;br&gt;&lt;tt&gt;_myGroup [[remoteExec]] [\"deleteGroup\", [[groupOwner]] _myGroup];&lt;/tt&gt;\n* [[Array]] - array of any of types listed above\n\n</value></part><part><name>p4</name>=<value> ''' JIP''' (Optional): [default: false]&lt;br&gt;&lt;br&gt;\n* [[String]] or [[Boolean]] - If [[true]], function generates a unique ID for the message and the message itself is added to the JIP queue and executed for every JIP. If a non-empty string is given, it is treated a custom ID of the message and the message itself is added to the JIP queue overriding any [[remoteExec]] message with the same ID. Otherwise, no ID is generated and no message is placed into the JIP queue. (see also Example 7 on how to remove previously set function from JIP queue)&lt;br&gt;&lt;br&gt;\n* [[Object]] or [[Group]] or [[netId]] - The persistent execution of the given [[remoteExec]] statement will be attached to the given [[Object]] or [[Group]], passed directly by reference or by their [[netId]]: &lt;tt&gt;_netId = \"this is my car\" [[remoteExec]] [\"hint\", 0, car];&lt;/tt&gt; or &lt;tt&gt;_netId = \"this is my car\" [[remoteExec]] [\"hint\", 0, [[netId]] car];&lt;/tt&gt;Upon success, the command will return [[netId]] of the used [[Object]] or [[Group]] or [[netId]]. When [[Object]] or [[Group]] is deleted and becomes [[objNull]] or [[grpNull]], the persistent [[remoteExec]] statement is automatically removed from JIP queue. Manual removal of the JIP statement could be done by passing either [[Object]], [[Group]] or [[netId]] as usual:&lt;tt&gt;[[remoteExec]] [\"\", car];&lt;/tt&gt; or &lt;tt&gt;[[remoteExec]] [\"\", [[netId]] car];&lt;/tt&gt;When JIP param is [[String]] in format \"[[Number]]:[[Number]]\", the string will be tested first whether or not it is the valid [[netId]] of an existing [[Object]] or [[Group]], and if not the execution will be aborted, if yes, that [[Object]] or [[Group]] will be used to set persistent execution.\n\n</value></part><part><name>p6</name>=<value> <template><title>Feature</title><part><name index=\"1\"/><value>Informative</value></part><part><name index=\"2\"/><value> JIP mostly makes sense for messages doing changes local to client (not directly synchronized over the network). Otherwise, after remoteExec is executed, depending on the contents of the global JIP queue there is a chance a new message could be added to it, unnecessary increasing the number of messages sent to any newly connected client.\nE.g. calling \"..remoteExec [\"setFuel\"..]\" is fine, however, calling \"..remoteExec [\"publicVariable\",..]\" is not.</value></part></template>\n\n</value></part><part><name>p7</name>=<value> <template><title>Feature</title><part><name index=\"1\"/><value>Warning</value></part><part><name index=\"2\"/><value> There could be '''only one JIP message with the same JIP ID in the JIP queue'''. This means that if one tries to [[remoteExec]] again with the existing JIP ID, the JIP message which is already in the JIP queue will be overwritten. Passing [[true]] for JIP param autogenerates unique ID, therefore adding new message in the JIP queue each time. All other options have potential to overwrite existing JIP message.</value></part></template>\n\n</value></part><part><name index=\"1\"/><value>r1 [[Anything]] - Nil in case of error. [[String]] otherwise. If JIP is not requested this is an empty string, if JIP is requested, it is the JIP ID. See the topic [[Function#Return_Values|Function]] for more information.\n\n</value></part><part><name>s2</name>=<value> [[remoteExec]] [functionName, targets, JIP]\n\n</value></part><part><name>p21</name>=<value> '''functionName''': [[String]] - function or command name.&lt;br&gt;\nWhile any function can be used, only commands and functions defined in [[CfgRemoteExec]] will be executed.\n\n</value></part><part><name>p22</name>=<value> '''targets''' (Optional): [default: 0 = everyone]\n* [[Number]] \n** When 0, the function or command will be executed globally, i.e. on the server and every connected client, including the one where [[remoteExec]] was originated. \n** When 2, it will be executed only on the [[isServer|server]]. \n** When 3, 4, 5... it will be executed on the client where [[clientOwner]] ID matches the given number. \n** When number is negative, the effect is inverted. -2 means execute on every client but not the server. -12, for example, means execute on the server and every client, but not on the client where [[clientOwner]] ID is equal to 12.\n* [[Object]] - the function will be executed only where unit is local\n* [[String]] - the function will be executed only where object or group defined by the variable with passed name is local\n* [[Side]] - the function will be executed only on clients where the player is on the specified side\n* [[Group]] - the function will be executed only on clients where the player is in the specified group. In order to execute the function where group is [[local]] pass owner of the group as param: &lt;br&gt;&lt;tt&gt;_myGroup [[remoteExec]] [\"deleteGroup\", [[groupOwner]] _myGroup];&lt;/tt&gt;\n* [[Array]] - array of any of types listed above\n\n</value></part><part><name>p23</name>=<value> ''' JIP''' (Optional): [default: false]&lt;br&gt;&lt;br&gt;\n* [[String]] or [[Boolean]] - If [[true]], function generates a unique ID for the message and the message itself is added to the JIP queue and executed for every JIP. If a non-empty string is given, it is treated a custom ID of the message and the message itself is added to the JIP queue overriding any [[remoteExec]] message with the same ID. Otherwise, no ID is generated and no message is placed into the JIP queue. (see also Example 7 on how to remove previously set function from JIP queue)&lt;br&gt;&lt;br&gt;\n* [[Object]] or [[Group]] or [[netId]] - The persistent execution of the given [[remoteExec]] statement will be attached to the given [[Object]] or [[Group]], passed directly by reference or by their [[netId]]: &lt;tt&gt;_netId = \"this is my car\" [[remoteExec]] [\"hint\", 0, car];&lt;/tt&gt; or &lt;tt&gt;_netId = \"this is my car\" [[remoteExec]] [\"hint\", 0, [[netId]] car];&lt;/tt&gt;Upon success, the command will return [[netId]] of the used [[Object]] or [[Group]] or [[netId]]. When [[Object]] or [[Group]] is deleted and becomes [[objNull]] or [[grpNull]], the persistent [[remoteExec]] statement is automatically removed from JIP queue. Manual removal of the JIP statement could be done by passing either [[Object]], [[Group]] or [[netId]] as usual:&lt;tt&gt;[[remoteExec]] [\"\", car];&lt;/tt&gt; or &lt;tt&gt;[[remoteExec]] [\"\", [[netId]] car];&lt;/tt&gt;When JIP param is [[String]] in format \"[[Number]]:[[Number]]\", the string will be tested first whether or not it is the valid [[netId]] of an existing [[Object]] or [[Group]], and if not the execution will be aborted, if yes, that [[Object]] or [[Group]] will be used to set persistent execution.\n\n</value></part><part><name>p25</name>=<value> <template><title>Feature</title><part><name index=\"1\"/><value>Informative</value></part><part><name index=\"2\"/><value> JIP mostly makes sense for messages doing changes local to client (not directly synchronized over the network). Otherwise, after remoteExec is executed, depending on the contents of the global JIP queue there is a chance a new message could be added to it, unnecessary increasing the number of messages sent to any newly connected client.\nE.g. calling \"..remoteExec [\"setFuel\"..]\" is fine, however, calling \"..remoteExec [\"publicVariable\",..]\" is not.</value></part></template>\n\n</value></part><part><name>p26</name>=<value> <template><title>Feature</title><part><name index=\"1\"/><value>Warning</value></part><part><name index=\"2\"/><value> There could be '''only one JIP message with the same JIP ID in the JIP queue'''. This means that if one tries to [[remoteExec]] again with the existing JIP ID, the JIP message which is already in the JIP queue will be overwritten. Passing [[true]] for JIP param autogenerates unique ID, therefore adding new message in the JIP queue each time. All other options have potential to overwrite existing JIP message.</value></part></template>\n\n</value></part><part><name>r2</name>=<value> [[Anything]] - Nil in case of error. [[String]] otherwise. If JIP is not requested this is an empty string, if JIP is requested, it is the JIP ID. See the topic [[Function#Return_Values|Function]] for more information.\n\t\t  \n</value></part><part><name>x1</name>=<value> &lt;code&gt;// runs hint \"hello\" on each connected client\n\"hello\" [[remoteExec]] [\"[[hint]]\"]; &lt;/code&gt;\n\n</value></part><part><name>x2</name>=<value> &lt;code&gt;// runs hint \"hello\" on first connected client \n\"hello\" [[remoteExec]] [\"[[hint]]\", 3]; &lt;/code&gt;\n\n</value></part><part><name>x3</name>=<value> &lt;code&gt;// runs hint \"hello\" everywhere but server\n\"hello\" [[remoteExec]] [\"[[hint]]\", -2]; &lt;/code&gt;\n\n</value></part><part><name>x4</name>=<value> &lt;code&gt;// runs hint \"hello\" everywhere but server, JIPs the message\n// and returns e.g. \"3_1\" as a unique JIP id\nmyJipID = \"hello\" [[remoteExec]] [\"[[hint]]\", -2, [[true]]]; &lt;/code&gt;\n\n</value></part><part><name>x5</name>=<value> &lt;code&gt;// runs hint \"hello\" everywhere but server, JIPs the message under ID \"some_JIP_ID\"\n// replacing any previous message with this ID in the JIP queue.\n\"hello\" [[remoteExec]] [\"[[hint]]\", -2, \"some_JIP_ID\"];&lt;/code&gt;\n\n</value></part><part><name>x6</name>=<value> &lt;code&gt;// runs \"someFuncWithNoArgs\" on each connected client\n[[remoteExec]] [\"someFuncWithNoArgs\"]; &lt;/code&gt;\n\n</value></part><part><name>x7</name>=<value> &lt;code&gt;// removes a message identified by \"IamUnique\" from the JIP queue\n[[remoteExec]] [\"\", \"IamUnique\"]; &lt;/code&gt;\n\n</value></part><part><name>x8</name>=<value> &lt;code&gt;// all clients will have their ammo set to 1 for their current weapon\n{[[player]] [[setAmmo]] [<ext><name>nowiki</name><attr/></ext>[[primaryWeapon]] [[player]], 1];} [[remoteExec]] [\"[[BIS_fnc_call|bis_fnc_call]]\", 0]; &lt;/code&gt;\n\n</value></part><part><name>x9</name>=<value> &lt;code&gt;// Object obj will have its ammo set to 1 where it is local\n[obj,<ext><name>nowiki</name><attr/><inner>[</inner><close>&lt;/nowiki&gt;</close></ext>[[primaryWeapon]] obj, 1]<ext><name>nowiki</name><attr/><inner>]</inner><close>&lt;/nowiki&gt;</close></ext> [[remoteExec]] [\"[[setAmmo]]\", obj]; &lt;/code&gt;\n\n</value></part><part><name>x10</name>=<value> &lt;code&gt;myJipID = \"hello\" [[remoteExec]] [\"\", 0];\n[[if]] ([[isNil]] \"myJipID\") [[then]] { [[hint]] \"empty function name is not allowed\"; }; &lt;/code&gt;\n\n</value></part><part><name>seealso</name>=<value> [[remoteExecCall]] [[remoteExecutedOwner]] [[isRemoteExecuted]] [[isRemoteExecutedJIP]] [[Arma 3: Remote Execution]] [[canSuspend]] [[BIS_fnc_MP]]\n</value></part></template>\n\n<comment>&lt;!-- CONTINUE Notes --&gt;\n</comment>&lt;dl class=\"command_description\"&gt;\n&lt;dd class=\"notedate\"&gt;Posted on December 29, 2015 - 20:28 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:AgentRevolution|AgentRev]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n[[remoteExec]] and [[remoteExecCall]] are currently filtered by BattlEye's remoteexec.txt, the string analyzed by BE is formatted the same way as the following example's output:\n&lt;code&gt;[[format]] [\"%1 %2\", functionName, [[str]] params]&lt;/code&gt;\nIf [[CfgRemoteExec]] &lt;tt&gt;class Functions&lt;/tt&gt; is set to &lt;tt&gt;mode = 1;&lt;/tt&gt;, the following remoteexec.txt exclusion can be used to safely allow all whitelisted *_fnc_* functions taking an array as parameter to go through:\n&lt;code&gt;!=\"\\w+?_fnc_\\w+? \\[[\\S\\s]*\\]\"&lt;/code&gt;\nAny attempt to exploit this exclusion using other RE methods like [[createUnit]] will run into \"Error Missing ;\" without any malicious code being executed. Mod makers should refrain from remote-executing raw commands from clients, as they require individual exclusions, and instead use *_fnc_* functions taking an array as parameter, which are covered by the above exclusion.\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on March 24, 2016 - 14:09 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:R3vo|R3vo]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nThe INCORRECT way to call [[reveal]] command on a certain object for every player:\n&lt;code&gt;<ext><name>nowiki</name><attr/><inner>[</inner><close>&lt;/nowiki&gt;</close></ext>[[player]], _desired_object] [[remoteExec]] [\"reveal\", 0];&lt;/code&gt;\nIn this case [[player]] object will be the object obtained on the computer where [[remoteExec]] is initiated. If it is dedicated server, player will be [[objNull]], if it is client, player would be [[player]] object on this client. In any case this will not reveal _desired_object for all connected players.\n&lt;br&gt;&lt;br&gt;\nThe CORRECT way:\n&lt;code&gt;[_desired_object, {[[player]] [[reveal]] _this}] [[remoteExec]] [\"call\", 0];&lt;/code&gt;\nThe _desired_object will be identical on every client, this is what we want, but [[player]] will refer to individual player on each client, so _desired_object will be revealed to all connected players.\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on May 25, 2016 - 18:23 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone Kid|Killzone Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWhen adapting mission from dedicated server for SP, if target used in [[remoteExec]] is -2 (execute on every client but not server), in SP this will not execute since client is server in SP. To work around, the target could be set using [[isMultiplayer]] condition like this:\n&lt;code&gt;\"123\" [[remoteExec]] [\"hint\", [0, -2] [[select]] [[isMultiplayer]]];&lt;/code&gt;\nThis will execute [[hint]] on every client in MP on dedicated server (target -2) and will also execute it in SP (target 0).\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on May 28, 2016 - 20:51 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:R3vo|R3vo]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nWhile KK's solution works fine in sp missions and on dedicated servers, it will not work properly for hosted missions.&lt;br&gt;\n'''Solution:'''\n&lt;code&gt;[0,0.5] [[remoteExec]] ['[[fadeRadio]]',[0,-2] [[select]] [[isDedicated]],[[true]]];&lt;/code&gt;&lt;br&gt;\nSingleplayer: isDedicated returns false -&gt; code is executed everywhere (0)&lt;br&gt;\nHosted: isDedicated returns false -&gt; code is executed everywhere '''including host''' (0)&lt;br&gt;\nDedicated: isDedicated returns true -&gt; code is executed everywhere '''excluding server'''(-2)\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on Jan 30, 2017 - 18:35 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Pierre MGI|Pierre MGI]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\n&lt;code&gt;[some params] [[remoteExec]] ['some command',2,true];&lt;/code&gt; \nwill fail, as you can't use JIP and remoteExec on server only&lt;br&gt;\n&lt;code&gt;[some params] [[remoteExec]] ['some command',2]; // works&lt;/code&gt;&lt;br&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on May 10, 2017 - 20:10 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:Killzone Kid|Killzone Kid]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nTo [[remoteExec]]: \n&lt;code&gt;[[titleText]] [\"Test Message\", \"PLAIN\", 1];&lt;/code&gt;\nUse\n&lt;code&gt;<ext><name>nowiki</name><attr/><inner>[</inner><close>&lt;/nowiki&gt;</close></ext>[\"Test Message\", \"PLAIN\", 1]] [[remoteExec]] [\"titleText\"];&lt;/code&gt;\n&lt;/dd&gt;\n\n&lt;dd class=\"notedate\"&gt;Posted on April 22, 2018 - 15:29 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:KC Grimes|KC Grimes]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;\nIt seems that only global functions can be executed, as opposed to local. \n&lt;code&gt;&amp;lt;params&amp;gt; remoteExec [\"fnc_someScriptedFunction\", targets, JIP]; //Works&lt;/code&gt;\n&lt;br&gt;\n&lt;code&gt;&amp;lt;params&amp;gt; remoteExec [\"_fnc_someScriptedFunction\", targets, JIP]; //Does not work&lt;/code&gt;\n&lt;/dd&gt;\n&lt;/dl&gt;\n<comment>&lt;!-- DISCONTINUE Notes --&gt;\n</comment>\n\n&lt;dl class=\"command_description\"&gt;\n&lt;dt&gt;&lt;/dt&gt;\n&lt;dd class=\"notedate\"&gt;Posted on March 5, 2021 - 00:48 (UTC)&lt;/dd&gt;\n&lt;dt class=\"note\"&gt;[[User:7erra|7erra]]&lt;/dt&gt;\n&lt;dd class=\"note\"&gt;<template><title>#if:\nThe [[remoteExec]]'ed function only has to exist on the target machine. For example:\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>initPlayerLocal.sqf</value></part></template>\nTAG_fnc_testRemote <template><title>=</title></template> {\n\t[[hint]] \"Remote Exec Received\";\n};&lt;/code&gt;\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>Execute on dedicated server:</value></part></template>\n[] [[remoteExec]] [\"TAG_fnc_testRemote\", -2];&lt;/code&gt;\nWill display a hint for every client. This is especially useful for when the server is running a mod that is not required by clients.\n</title><part><name index=\"1\"/><value>\nThe [[remoteExec]]'ed function only has to exist on the target machine. For example:\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>initPlayerLocal.sqf</value></part></template>\nTAG_fnc_testRemote <template><title>=</title></template> {\n\t[[hint]] \"Remote Exec Received\";\n};&lt;/code&gt;\n&lt;code&gt;<template><title>cc</title><part><name index=\"1\"/><value>Execute on dedicated server:</value></part></template>\n[] [[remoteExec]] [\"TAG_fnc_testRemote\", -2];&lt;/code&gt;\nWill display a hint for every client. This is especially useful for when the server is running a mod that is not required by clients.\n</value></part><part><name index=\"2\"/><value>-no text provided-</value></part></template>&lt;/dd&gt;\n&lt;/dl&gt;</root>"
        }
    }
}